[
  {
    "objectID": "README.html",
    "href": "README.html",
    "title": "Health Equity Evidence Centre",
    "section": "",
    "text": "Click to show code\nlibrary(magrittr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(scales)\n\n# Define consistent theme\nheec_theme &lt;- theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\"),\n    plot.subtitle = element_text(size = 11, color = \"gray40\"),\n    axis.title = element_text(size = 12),\n    axis.text = element_text(size = 10),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10),\n    panel.grid.minor = element_blank(),\n    axis.text.x = element_text(angle = 45, hjust = 1)\n  )\n\n# Define consistent colors\nheec_colors &lt;- c(\"#1B2C57\", \"#00A865\", \"#A80026\", \"#D35400\", \"#8E44AD\", \"#3498DB\", \"#00A676\")\nimd_colors &lt;- c(\"5\" = \"#A80026\", \"4\" = \"#D35400\", \"3\" = \"#8E44AD\", \"2\" = \"#3498DB\", \"1\" = \"#00A676\")\nmy_colors &lt;- colorRampPalette(c(\"#1B2C57\", \"#00A865\"))(42)\nThis repository contains a comprehensive analysis of health inequalities in primary care across England, examining how healthcare resources, access, and outcomes vary by socioeconomic deprivation level."
  },
  {
    "objectID": "README.html#project-overview",
    "href": "README.html#project-overview",
    "title": "Health Equity Evidence Centre",
    "section": "Project Overview",
    "text": "Project Overview\nThe Health Equity Evidence Centre has compiled and analyzed practice-level data from multiple NHS sources to understand patterns of inequality in general practice. Our analysis covers 6,669 GP practices serving over 60 million patients, examining disparities across:\n\nNHS funding and payments to general practices\nWorkforce density and staffing patterns\n\nPatient satisfaction and access to care\nHealth outcomes and disease prevalence\nPractice characteristics including rurality and size"
  },
  {
    "objectID": "README.html#key-findings",
    "href": "README.html#key-findings",
    "title": "Health Equity Evidence Centre",
    "section": "Key Findings",
    "text": "Key Findings\nOur analysis reveals significant health inequalities in primary care across England:\n\nüí∞ Payment Disparities\n\nPractices serving the most deprived 20% of the population received ¬£14 less in NHS payments per weighted patient in 2022-23 than those serving the least deprived quintile\nDispensing practices earn substantially more per patient due to additional prescribing revenues, creating geographic inequities\nDespite higher healthcare needs in deprived areas, funding mechanisms don‚Äôt fully compensate for increased complexity and demand\n\n\n\nüë®‚Äç‚öïÔ∏è Workforce Challenges\n\nGP workforce density varies significantly across deprivation levels, with fewer fully qualified GPs per patient in more deprived areas\nRural practices face acute staffing shortages while serving populations with greater healthcare needs\nThe shift from GP partners to salaried GPs threatens traditional practice models, particularly affecting smaller practices in disadvantaged areas\n\n\n\nüòü Patient Experience Gaps\n\nPatient satisfaction consistently lower in practices serving more deprived populations across all measured domains\nAccess to appointments and continuity of care shows persistent inequalities, with worse outcomes in deprived communities\nTrust and confidence in healthcare providers varies by practice characteristics and local socioeconomic factors\n\n\n\nüè• System-Wide Pressures\n\nPractice closures disproportionately impact smaller communities, with 718,000 patients displaced since 2019\nAge structure of populations significantly influences payment levels, with practices serving older patients receiving higher capitation"
  },
  {
    "objectID": "README.html#data-sources",
    "href": "README.html#data-sources",
    "title": "Health Equity Evidence Centre",
    "section": "Data Sources",
    "text": "Data Sources\nThis repository includes complete practice-level time-series data from authoritative NHS sources:\n\nNHS Digital: Payments, workforce, appointments, and QOF data (2015-2025)\nOHID Fingertips: Disease prevalence, health behaviors, and life expectancy\nGP Patient Survey: Patient satisfaction and experience metrics (2017-2024)\nNHS England: Practice characteristics, PCN data, and geographic mappings"
  },
  {
    "objectID": "README.html#interactive-tools",
    "href": "README.html#interactive-tools",
    "title": "Health Equity Evidence Centre",
    "section": "Interactive Tools",
    "text": "Interactive Tools\nThe project features multiple interactive applications for data exploration: - Interactive Website with code folding and dynamic visualizations - 9 Shiny Applications for detailed data exploration - 42 ICB Datapacks with automated reporting for all Integrated Care Boards"
  },
  {
    "objectID": "README.html#index-of-multiple-deprivation-imd",
    "href": "README.html#index-of-multiple-deprivation-imd",
    "title": "Health Equity Evidence Centre",
    "section": "Index of Multiple Deprivation (IMD)",
    "text": "Index of Multiple Deprivation (IMD)\nThe Ministry of Housing, Communities and Local Government calculates the English Indices of Deprivation, which includes the Index of Multiple Deprivation (IMD) - the official measure of relative deprivation in England - at the practice-level. This data is used to assess the socio-economic status of the population served by each practice.\nThe latest release is IoD2019; no new release has been announced as of Nov 2024.\n\nAPI\nThis data can be accessed through the API provided by the Fingertips platform.\n\n\nClick to show code\n# Load necessary libraries\nlibrary(httr)\nlibrary(readr)\nlibrary(magrittr)\nlibrary(dplyr)\n\n# Define the URL and query parameters\nbase_url &lt;- \"https://fingertipsws.phe.org.uk/api/all_data/csv/by_indicator_id\"\nquery_params &lt;- list(\n  v = \"/0-c459298b/\",\n  parent_area_code = \"E92000001\",\n  parent_area_type_id = 167,\n  child_area_type_id = 7,\n  indicator_ids = 93553\n)\n\n# Make the API request\nresponse &lt;- GET(base_url, query = query_params)\n\n# Check if the response is successful\nif (http_status(response)$category == \"Success\") {\n  # Write the content to a temporary file\n  temp_file &lt;- tempfile(fileext = \".csv\")\n  writeBin(content(response, \"raw\"), temp_file)\n\n  # Read the CSV data\n  IMD &lt;- read_csv(temp_file)\n\n  # Display the first few rows of the data\n  print(head(IMD))\n} else {\n  cat(\"Failed to retrieve data. Status code:\", status_code(response), \"\\n\")\n  cat(\"Response content:\", content(response, \"text\"), \"\\n\")\n}\n\n\n# A tibble: 6 √ó 27\n  `Indicator ID` `Indicator Name`        `Parent Code` `Parent Name` `Area Code`\n           &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;         &lt;chr&gt;         &lt;chr&gt;      \n1          93553 Deprivation score (IMD‚Ä¶ &lt;NA&gt;          &lt;NA&gt;          E92000001  \n2          93553 Deprivation score (IMD‚Ä¶ E92000001     England       E38000217  \n3          93553 Deprivation score (IMD‚Ä¶ E38000247     NHS Tees Val‚Ä¶ A81001     \n4          93553 Deprivation score (IMD‚Ä¶ E38000247     NHS Tees Val‚Ä¶ A81002     \n5          93553 Deprivation score (IMD‚Ä¶ E38000247     NHS Tees Val‚Ä¶ A81004     \n6          93553 Deprivation score (IMD‚Ä¶ E38000247     NHS Tees Val‚Ä¶ A81005     \n# ‚Ñπ 22 more variables: `Area Name` &lt;chr&gt;, `Area Type` &lt;chr&gt;, Sex &lt;chr&gt;,\n#   Age &lt;chr&gt;, `Category Type` &lt;chr&gt;, Category &lt;chr&gt;, `Time period` &lt;dbl&gt;,\n#   Value &lt;dbl&gt;, `Lower CI 95.0 limit` &lt;lgl&gt;, `Upper CI 95.0 limit` &lt;lgl&gt;,\n#   `Lower CI 99.8 limit` &lt;lgl&gt;, `Upper CI 99.8 limit` &lt;lgl&gt;, Count &lt;lgl&gt;,\n#   Denominator &lt;lgl&gt;, `Value note` &lt;chr&gt;, `Recent Trend` &lt;chr&gt;,\n#   `Compared to England value or percentiles` &lt;chr&gt;,\n#   `Compared to CCGs (from Apr 2021) value or percentiles` &lt;chr&gt;, ‚Ä¶\n\n\nClick to show code\nhead(IMD)\n\n\n# A tibble: 6 √ó 27\n  `Indicator ID` `Indicator Name`        `Parent Code` `Parent Name` `Area Code`\n           &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;         &lt;chr&gt;         &lt;chr&gt;      \n1          93553 Deprivation score (IMD‚Ä¶ &lt;NA&gt;          &lt;NA&gt;          E92000001  \n2          93553 Deprivation score (IMD‚Ä¶ E92000001     England       E38000217  \n3          93553 Deprivation score (IMD‚Ä¶ E38000247     NHS Tees Val‚Ä¶ A81001     \n4          93553 Deprivation score (IMD‚Ä¶ E38000247     NHS Tees Val‚Ä¶ A81002     \n5          93553 Deprivation score (IMD‚Ä¶ E38000247     NHS Tees Val‚Ä¶ A81004     \n6          93553 Deprivation score (IMD‚Ä¶ E38000247     NHS Tees Val‚Ä¶ A81005     \n# ‚Ñπ 22 more variables: `Area Name` &lt;chr&gt;, `Area Type` &lt;chr&gt;, Sex &lt;chr&gt;,\n#   Age &lt;chr&gt;, `Category Type` &lt;chr&gt;, Category &lt;chr&gt;, `Time period` &lt;dbl&gt;,\n#   Value &lt;dbl&gt;, `Lower CI 95.0 limit` &lt;lgl&gt;, `Upper CI 95.0 limit` &lt;lgl&gt;,\n#   `Lower CI 99.8 limit` &lt;lgl&gt;, `Upper CI 99.8 limit` &lt;lgl&gt;, Count &lt;lgl&gt;,\n#   Denominator &lt;lgl&gt;, `Value note` &lt;chr&gt;, `Recent Trend` &lt;chr&gt;,\n#   `Compared to England value or percentiles` &lt;chr&gt;,\n#   `Compared to CCGs (from Apr 2021) value or percentiles` &lt;chr&gt;, ‚Ä¶\n\n\n\n\nFingertipsR Package\nThe IMD data can also be accessed using the fingertipsR package.\n\n\nClick to show code\n# Load necessary library\nlibrary(fingertipsR)\n\n# Get the profile ID for the Public Health Outcomes Framework\nprofiles_data &lt;- profiles()\nphof_profile &lt;- profiles_data[profiles_data$ProfileName == \"Public Health Outcomes Framework\", ]\nprofile_id &lt;- phof_profile$ProfileID[1]\n\n# Print the profile details (optional)\nprint(phof_profile)\n\n\n# A tibble: 6 √ó 4\n  ProfileID ProfileName                        DomainID DomainName              \n      &lt;int&gt; &lt;chr&gt;                                 &lt;int&gt; &lt;chr&gt;                   \n1        19 Public Health Outcomes Framework    1000049 A. Overarching indicato‚Ä¶\n2        19 Public Health Outcomes Framework    1000041 B. Wider determinants o‚Ä¶\n3        19 Public Health Outcomes Framework    1000042 C. Health improvement   \n4        19 Public Health Outcomes Framework    1000043 D. Health protection    \n5        19 Public Health Outcomes Framework    1000044 E. Healthcare and prema‚Ä¶\n6        19 Public Health Outcomes Framework 1938132983 Supporting information  \n\n\nClick to show code\n# Get indicators for the Public Health Outcomes Framework profile\nindicators_data &lt;- indicators(ProfileID = profile_id)\n\n# Find the IndicatorID for \"Deprivation score (IMD 2019)\"\nindicator_id &lt;- indicators_data$IndicatorID[indicators_data$IndicatorName == \"Deprivation score (IMD 2019)\"]\n\n# Print the indicator details (optional)\nprint(indicators_data[indicators_data$IndicatorName == \"Deprivation score (IMD 2019)\", ])\n\n\n# A tibble: 1 √ó 6\n  IndicatorID IndicatorName            DomainID DomainName ProfileID ProfileName\n        &lt;int&gt; &lt;fct&gt;                       &lt;int&gt; &lt;chr&gt;          &lt;int&gt; &lt;chr&gt;      \n1       93553 Deprivation score (IMD ‚Ä¶   1.94e9 Supportin‚Ä¶        19 Public Hea‚Ä¶\n\n\nClick to show code\n# Get the data for the \"Deprivation score (IMD 2019)\" indicator\nIMD &lt;- fingertips_data(IndicatorID = indicator_id, AreaTypeID = 7) # AreaTypeID 7 is for CCGs\n\n# Display the first few rows of the data\nhead(IMD)\n\n\n  IndicatorID                IndicatorName ParentCode                ParentName\n1       93553 Deprivation score (IMD 2019)       &lt;NA&gt;                      &lt;NA&gt;\n2       93553 Deprivation score (IMD 2019)     U89141              Stockton PCN\n3       93553 Deprivation score (IMD 2019)     U07032        North Stockton PCN\n4       93553 Deprivation score (IMD 2019)     U02671 Greater Middlesbrough PCN\n5       93553 Deprivation score (IMD 2019)     U07842        East Cleveland PCN\n6       93553 Deprivation score (IMD 2019)     U07032        North Stockton PCN\n   AreaCode                        AreaName AreaType     Sex      Age\n1 E92000001                         England  England Persons All ages\n2    A81001             The Densham Surgery      GPs Persons All ages\n3    A81002      Queens Park Medical Centre      GPs Persons All ages\n4    A81004           Acklam Medical Centre      GPs Persons All ages\n5    A81005              Springwood Surgery      GPs Persons All ages\n6    A81006 Tennant Street Medical Practice      GPs Persons All ages\n  CategoryType Category Timeperiod    Value LowerCI95.0limit UpperCI95.0limit\n1         &lt;NA&gt;     &lt;NA&gt;       2010 21.69383               NA               NA\n2         &lt;NA&gt;     &lt;NA&gt;       2010 25.07512               NA               NA\n3         &lt;NA&gt;     &lt;NA&gt;       2010 27.70068               NA               NA\n4         &lt;NA&gt;     &lt;NA&gt;       2010 33.05193               NA               NA\n5         &lt;NA&gt;     &lt;NA&gt;       2010 14.55969               NA               NA\n6         &lt;NA&gt;     &lt;NA&gt;       2010 29.14449               NA               NA\n  LowerCI99.8limit UpperCI99.8limit Count Denominator Valuenote RecentTrend\n1               NA               NA    NA          NA      &lt;NA&gt;        &lt;NA&gt;\n2               NA               NA    NA          NA      &lt;NA&gt;        &lt;NA&gt;\n3               NA               NA    NA          NA      &lt;NA&gt;        &lt;NA&gt;\n4               NA               NA    NA          NA      &lt;NA&gt;        &lt;NA&gt;\n5               NA               NA    NA          NA      &lt;NA&gt;        &lt;NA&gt;\n6               NA               NA    NA          NA      &lt;NA&gt;        &lt;NA&gt;\n  ComparedtoEnglandvalueorpercentiles\n1                        Not compared\n2                        Not compared\n3                        Not compared\n4                        Not compared\n5                        Not compared\n6                        Not compared\n  ComparedtoPCNs(v.25/10/24)valueorpercentiles TimeperiodSortable Newdata\n1                                 Not compared           20100000    &lt;NA&gt;\n2                                 Not compared           20100000    &lt;NA&gt;\n3                                 Not compared           20100000    &lt;NA&gt;\n4                                 Not compared           20100000    &lt;NA&gt;\n5                                 Not compared           20100000    &lt;NA&gt;\n6                                 Not compared           20100000    &lt;NA&gt;\n  Comparedtogoal Timeperiodrange\n1           &lt;NA&gt;              1y\n2           &lt;NA&gt;              1y\n3           &lt;NA&gt;              1y\n4           &lt;NA&gt;              1y\n5           &lt;NA&gt;              1y\n6           &lt;NA&gt;              1y\n\n\n\n\nDirect download\nHowever, this data only provides values for practices that are still active in 2019. To get the data for all practices, we obtained the CSV directly from OHID via email, which is available here as IMD_raw.csv.\nIMD values are only provided for 2010, 2015, and 2019. In order to have a continuous time series, we interpolate the values between these years, and extrapolate the values for 2020-2025. The resultant data is saved here as IMD_interpolated.csv.\n\n\nClick to show code\nIMD &lt;- read.csv(\"data/IMD/IMD_raw.csv\")\n\nIMD &lt;- IMD[, c(\"AreaCode\", \"Value\", \"Year\")]\nIMD %&lt;&gt;% rename(., Practice.Code = AreaCode)\nIMD %&lt;&gt;% rename(., IMD = Value)\n\n### interpolate IMD\nresult_df &lt;- data.frame()\n\nfor (i in unique(IMD$Practice.Code)) {\n  has_2010 &lt;- any(IMD$Practice.Code == i & IMD$Year == 2010)\n  has_2015 &lt;- any(IMD$Practice.Code == i & IMD$Year == 2015)\n  has_2019 &lt;- any(IMD$Practice.Code == i & IMD$Year == 2019)\n\n  # if data is only available for 2010, extrapolate to 2011-2025\n  if (has_2010 & !has_2015) {\n    for (year in 2011:2025) {\n      new_row &lt;- data.frame(\n        Year = year,\n        Practice.Code = i,\n        IMD = IMD[IMD$Practice.Code == i & IMD$Year == 2010, ]$IMD\n      )\n\n      # Append the new row to the result data frame\n      result_df &lt;- rbind(result_df, new_row)\n    }\n  }\n\n  # if data is available for 2010 and 2015, interpolate to 2011-2014\n  if (has_2010 & has_2015) {\n    for (year in 2011:2014) {\n      y_new &lt;- approx(\n        IMD[IMD$Practice.Code == i, ]$Year,\n        IMD[IMD$Practice.Code == i, ]$IMD,\n        xout = year\n      )\n      # Create a new row for the current year and AreaCode\n      new_row &lt;- data.frame(\n        Year = year,\n        Practice.Code = i,\n        IMD = y_new$y\n      )\n\n      # Append the new row to the result data frame\n      result_df &lt;- rbind(result_df, new_row)\n    }\n  }\n\n  # if data is available for 2015 but not 2019, extrapolate to 2016-2025\n  if (has_2015 & !has_2019) {\n    for (year in 2016:2025) {\n      new_row &lt;- data.frame(\n        Year = year,\n        Practice.Code = i,\n        IMD = IMD[IMD$Practice.Code == i & IMD$Year == 2015, ]$IMD\n      )\n\n      # Append the new row to the result data frame\n      result_df &lt;- rbind(result_df, new_row)\n    }\n  }\n\n  # if data is available for 2015 and 2019, interpolate to 2016-2018\n  if (has_2015 & has_2019) {\n    for (year in 2016:2018) {\n      y_new &lt;- approx(\n        IMD[IMD$Practice.Code == i, ]$Year,\n        IMD[IMD$Practice.Code == i, ]$IMD,\n        xout = year\n      )\n      # Create a new row for the current year and AreaCode\n      new_row &lt;- data.frame(\n        Year = year,\n        Practice.Code = i,\n        IMD = y_new$y\n      )\n\n      # Append the new row to the result data frame\n      result_df &lt;- rbind(result_df, new_row)\n    }\n  }\n\n  # if data is available for 2019, extrapolate to 2020-2025\n  if (has_2019) {\n    for (year in 2020:2025) {\n      new_row &lt;- data.frame(\n        Year = year,\n        Practice.Code = i,\n        IMD = IMD[IMD$Practice.Code == i & IMD$Year == 2019, ]$IMD\n      )\n\n      # Append the new row to the result data frame\n      result_df &lt;- rbind(result_df, new_row)\n    }\n  }\n}\n\nIMD &lt;- rbind(IMD, result_df)\n\nIMD &lt;- IMD[order(IMD$Practice.Code, IMD$Year), ]\n\nIMD %&gt;%\n  group_by(Year) %&gt;%\n  summarise(\n    mean_IMD = mean(IMD, na.rm = TRUE),\n    sd_IMD = sd(IMD, na.rm = TRUE),\n    min_IMD = min(IMD, na.rm = TRUE),\n    max_IMD = max(IMD, na.rm = TRUE),\n    n = n()\n  )\n\n\n# A tibble: 16 √ó 6\n    Year mean_IMD sd_IMD min_IMD max_IMD     n\n   &lt;int&gt;    &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;int&gt;\n 1  2010     24.2   12.8    2.60    68.9  8222\n 2  2011     24.2   12.6    2.77    68.4  8222\n 3  2012     24.1   12.4    2.95    67.9  8222\n 4  2013     24.1   12.2    3.13    67.4  8222\n 5  2014     24.1   12.1    3.31    67.0  8222\n 6  2015     24.1   12.0    3.21    66.5  8438\n 7  2016     24.1   11.9    3.21    66.5  8438\n 8  2017     24.1   11.9    3.21    67.1  8438\n 9  2018     24.1   11.9    3.21    67.9  8438\n10  2019     24.1   11.9    3.21    68.7  8461\n11  2020     24.1   11.9    3.21    68.7  8461\n12  2021     24.1   11.9    3.21    68.7  8461\n13  2022     24.1   11.9    3.21    68.7  8461\n14  2023     24.1   11.9    3.21    68.7  8461\n15  2024     24.1   11.9    3.21    68.7  8461\n16  2025     24.1   11.9    3.21    68.7  8461"
  },
  {
    "objectID": "README.html#payments",
    "href": "README.html#payments",
    "title": "Health Equity Evidence Centre",
    "section": "Payments",
    "text": "Payments\nNHS Digital provided annual data on payments made to general practices in England from 2014/15 to 22/23.\nAnnual practice level .csv files are available here; some preprocessing has been done to clean the data and ensure consistency in variable names across years.\nExecute the following code to merge the data to create a single time-series dataset:\n\n\nClick to show code\nlibrary(magrittr)\nlibrary(dplyr)\n\nnhs_payments &lt;- data.frame()\n\nfor (file in list.files(\"data/payments/raw\")[1:6]) {\n  df &lt;- read.csv(paste0(\"data/payments/raw/\", file))\n\n  # assign year\n  df$Year &lt;- file %&gt;%\n    substr(1, nchar(.) - 4) %&gt;%\n    substr(4, nchar(.)) %&gt;%\n    paste0(\"20\", .) %&gt;%\n    as.numeric()\n\n  df$Average.payments.per.registered.patient %&lt;&gt;% as.numeric()\n  df$Average.payments.per.weighted.patient %&lt;&gt;% as.numeric()\n\n  nhs_payments &lt;- bind_rows(nhs_payments, df)\n}\n\n# Add 2021 with COVID + PCN (incl deductions)\n# Includes Total.NHS.Payments.to.General.Practice, Total.NHS.Payments.including.covid.vaccination.and.covid.support.and.expansion.payments, and Total.NHS.Payments.including.PCN.Workforce..Leadership.and.Support\n# Total.NHS.Payments should include PCN and COVID payments\npayments2021 &lt;- read.csv(\"data/payments/raw/20-21.csv\")\npayments2021$Year &lt;- 2021\n\npayments2021$Total.COVID.Payments &lt;- payments2021$Total.NHS.Payments.including.covid.vaccination.and.covid.support.and.expansion.payments - payments2021$Total.NHS.Payments.to.General.Practice\npayments2021$Total.PCN.Payments &lt;- payments2021$Total.NHS.Payments.including.PCN.Workforce..Leadership.and.Support - payments2021$Total.NHS.Payments.to.General.Practice\npayments2021$Total.NHS.Payments.to.General.Practice &lt;- payments2021$Total.NHS.Payments.to.General.Practice + payments2021$Total.COVID.Payments + payments2021$Total.PCN.Payments\npayments2021$Total.NHS.Payments.to.General.Practice.Minus.Deductions &lt;- payments2021$Total.NHS.Payments.to.General.Practice - payments2021$Deductions.for.Pensions..Levies.and.Prescription.Charge.Income\n\n# Add 2022 with COVID + PCN\n# Includes Total.NHS.Payments.to.General.Practice.including.Covid.and.PCN.payments as well as Total.NHS.Payments.to.General.Practice\npayments2022 &lt;- read.csv(\"data/payments/raw/21-22.csv\")\npayments2022$Year &lt;- 2022\n\npayments2022$Total.COVID.Payments &lt;- payments2022$Total.NHS.Payments.to.General.Practice.including.covid.vaccination..covid.support.and.long.covid.payments - payments2022$Total.NHS.Payments.to.General.Practice\npayments2022$Total.PCN.Payments &lt;- payments2022$Total.NHS.Payments.including.PCN.Workforce..Leadership.and.Support - payments2022$Total.NHS.Payments.to.General.Practice\npayments2022$Total.NHS.Payments.to.General.Practice &lt;- payments2022$Total.NHS.Payments.to.General.Practice.including.Covid.and.PCN.payments\npayments2022$Total.NHS.Payments.to.General.Practice.Minus.Deductions &lt;- payments2022$Total.NHS.Payments.to.General.Practice - payments2022$Deductions.for.Pensions..Levies.and.Prescription.Charge.Income\n\n# Add 2023\n# Includes Total.NHS.Payments.to.General.Practice.including.Covid.and.PCN.payments as well as Total.NHS.Payments.to.General.Practice\npayments2023 &lt;- read.csv(\"data/payments/raw/22-23.csv\")\npayments2023$Year &lt;- 2023\n\npayments2023$Total.COVID.Payments &lt;- payments2023$Total.NHS.Payments.to.General.Practice.including.covid.vaccination..covid.support.and.long.covid.payments - payments2023$Total.NHS.Payments.to.General.Practice\npayments2023$Total.PCN.Payments &lt;- payments2023$Total.NHS.Payments.including.PCN.Workforce..Leadership.and.Support - payments2023$Total.NHS.Payments.to.General.Practice\npayments2023$Total.NHS.Payments.to.General.Practice &lt;- payments2023$Total.NHS.Payments.to.General.Practice.including.Covid.and.PCN.payments\npayments2023$Total.NHS.Payments.to.General.Practice.Minus.Deductions &lt;- payments2023$Total.NHS.Payments.to.General.Practice - payments2023$Deductions.for.Pensions..Levies.and.Prescription.Charge.Income\n\nnhs_payments &lt;- bind_rows(nhs_payments, payments2021, payments2022, payments2023)\n\nnhs_payments %&gt;%\n  group_by(Year) %&gt;%\n  summarise(\n    total_payments = sum(Total.NHS.Payments.to.General.Practice),\n    total_patients = sum(Number.of.Registered.Patients..Last.Known.Figure.),\n    n_practices = n()\n  )\n\n\n# A tibble: 9 √ó 4\n   Year total_payments total_patients n_practices\n  &lt;dbl&gt;          &lt;dbl&gt;          &lt;dbl&gt;       &lt;int&gt;\n1  2015    7990324226       56633982         7959\n2  2016    8182561838.      57371518         7841\n3  2017    8883780328.      58688866         7763\n4  2018    9050596202.      59527981         7543\n5  2019    9261391490.      59824330.        7279\n6  2020    9377079859.      60316398.        7001\n7  2021   10309607071.      60671585.        6808\n8  2022   11510115126.      61570004.        6758\n9  2023   11011986630.      62134645.        6669\n\n\n\n\nClick to show code\nCCG_ICB &lt;- read.csv(\"data/CCG_ICB_code.csv\")\n\n# match CCG.Code in df with CCG.Code in ccg_icb and return ICB.Name\nnhs_payments$ICB.NAME &lt;- CCG_ICB[match(nhs_payments$CCG.Code, CCG_ICB$CCG.Code), ]$ICB.NAME\n\n# In nhs_payments$ICB.NAME, remove \"NHS \" from the beginning of each string and \" Integrated Care Board\" from the end of each string\nnhs_payments &lt;- nhs_payments %&gt;%\n  mutate(ICB.NAME = ICB.NAME %&gt;%\n    gsub(\"^NHS \", \"\", .) %&gt;%\n    gsub(\" Integrated Care Board$\", \"\", .) %&gt;%\n    gsub(\" ICB\", \"\", .))\n\nnhs_payments$ICB.NAME %&gt;%\n  unique() %&gt;%\n  sort()\n\n\n [1] \"Bath and North East Somerset, Swindon and Wiltshire\"\n [2] \"Bedfordshire, Luton and Milton Keynes\"              \n [3] \"Birmingham and Solihull\"                            \n [4] \"Black Country\"                                      \n [5] \"Bristol, North Somerset and South Gloucestershire\"  \n [6] \"Buckinghamshire, Oxfordshire and Berkshire West\"    \n [7] \"Cambridgeshire and Peterborough\"                    \n [8] \"Cheshire and Merseyside\"                            \n [9] \"Cornwall and the Isles of Scilly\"                   \n[10] \"Coventry and Warwickshire\"                          \n[11] \"Derby and Derbyshire\"                               \n[12] \"Devon\"                                              \n[13] \"Dorset\"                                             \n[14] \"Frimley\"                                            \n[15] \"Gloucestershire\"                                    \n[16] \"Greater Manchester\"                                 \n[17] \"Hampshire and Isle of Wight\"                        \n[18] \"Herefordshire and Worcestershire\"                   \n[19] \"Hertfordshire and West Essex\"                       \n[20] \"Humber and North Yorkshire\"                         \n[21] \"Kent and Medway\"                                    \n[22] \"Lancashire and South Cumbria\"                       \n[23] \"Leicester, Leicestershire and Rutland\"              \n[24] \"Lincolnshire\"                                       \n[25] \"Mid and South Essex\"                                \n[26] \"Norfolk and Waveney\"                                \n[27] \"North Central London\"                               \n[28] \"North East and North Cumbria\"                       \n[29] \"North East London\"                                  \n[30] \"North West London\"                                  \n[31] \"Northamptonshire\"                                   \n[32] \"Nottingham and Nottinghamshire\"                     \n[33] \"Shropshire, Telford and Wrekin\"                     \n[34] \"Somerset\"                                           \n[35] \"South East London\"                                  \n[36] \"South West London\"                                  \n[37] \"South Yorkshire\"                                    \n[38] \"Staffordshire and Stoke-on-Trent\"                   \n[39] \"Suffolk and North East Essex\"                       \n[40] \"Surrey Heartlands\"                                  \n[41] \"Sussex\"                                             \n[42] \"West Yorkshire\"                                     \n\n\n\n\nClick to show code\nstandardise_columns &lt;- function(nhs_payments) {\n  # Helper function to merge columns and keep the first non-NA value\n  merge_columns &lt;- function(df, cols, new_col) {\n    df[[new_col]] &lt;- df %&gt;%\n      select(all_of(cols)) %&gt;%\n      apply(1, function(x) {\n        x &lt;- x[!is.na(x)]\n        if (length(x) == 0) {\n          return(NA)\n        }\n        return(x[1])\n      }) %&gt;%\n      as.character()\n\n    # Drop the original columns but keep the new column\n    df &lt;- df %&gt;% select(-all_of(cols), all_of(new_col))\n    return(df)\n  }\n\n  # Merge \"PracticeType\", \"Practice.Type\", \"Practice.type\" into one column called Practice.Type\n  nhs_payments &lt;- merge_columns(nhs_payments, c(\"PracticeType\", \"Practice.Type\", \"Practice.type\"), \"Practice.Type\")\n\n  # Merge \"PracticeRurality\", \"Practice.Rurality\" into one column called Practice.Rurality\n  nhs_payments &lt;- merge_columns(nhs_payments, c(\"PracticeRurality\", \"Practice.Rurality\"), \"Practice.Rurality\")\n\n  # Merge \"AtypicalCharacteristics\", \"Atypical.Characteristics\", \"Atypical.characteristics\" into one column called Atypical.Characteristics\n  nhs_payments &lt;- merge_columns(nhs_payments, c(\"AtypicalCharacteristics\", \"Atypical.Characteristics\", \"Atypical.characteristics\"), \"Atypical.Characteristics\")\n\n  # Merge \"Code\" into \"PCN.Code\"\n  nhs_payments &lt;- merge_columns(nhs_payments, c(\"PCN.Code\", \"Code\"), \"PCN.Code\")\n\n  return(nhs_payments)\n}\n\nnhs_payments &lt;- standardise_columns(nhs_payments)\n\n# drop Total.NHS.Payments.including.covid.vaccination.and.covid.support.and.expansion.payments, Total.NHS.Payments.including.PCN.Workforce..Leadership.and.Support, Total.NHS.Payments.to.General.Practice.including.Covid.and.PCN.payments, Total.NHS.Payments.to.General.Practice.including.Covid.and.PCN.payments.minus.deductions, Total.NHS.Payments.to.General.Practice.including.covid.vaccination..covid.support.and.long.covid.payments\nnhs_payments &lt;- nhs_payments %&gt;%\n  select(-Total.NHS.Payments.including.covid.vaccination.and.covid.support.and.expansion.payments, -Total.NHS.Payments.including.PCN.Workforce..Leadership.and.Support, -Total.NHS.Payments.to.General.Practice.including.Covid.and.PCN.payments, -Total.NHS.Payments.to.General.Practice.including.Covid.and.PCN.payments.minus.deductions, -Total.NHS.Payments.to.General.Practice.including.covid.vaccination..covid.support.and.long.covid.payments)\n\n# The following lists should contain all columns in NHS payments\npractice_information &lt;- c(\n  \"NHS.England..Region..code\", \"NHS.England..Region..Name\",\n  \"CCG.Code\", \"CCG.NAME\",\n  \"Practice.Code\", \"Practice.Name\",\n  \"Practice.Address\", \"Practice.Postcode\",\n  \"Practice.Open.Date\", \"Practice.Close.Date\",\n  \"Contract.Type\", \"Dispensing.Practice\",\n  \"Quarter.used.for.patient.data\",\n  # PracticeType = 2017, Practice.Type = 2018:2021, Practice.type = 2022:2023, None = 2015:2016\n  # \"PracticeType\", \"Practice.type\",\n  \"Practice.Type\",\n  # PracticeRurality = 2017, Practice.Rurality = 2018:2023, None = 2015:2016\n  #  \"PracticeRurality\",\n  \"Practice.Rurality\",\n  # AtypicalCharacteristics = 2017, Atypical.Characteristics = 2018:2020, Atypical.characteristics: 2021:2023, None = 2015:2016\n  # \"AtypicalCharacteristics\", \"Atypical.characteristics\",\n  \"Atypical.Characteristics\",\n  # Code = 2023\n  # \"Code\",\n  \"PCN.Code\",\n  \"PCN.Name\",\n  \"ICB.NAME\", \"Sub.ICB.NAME\",\n  \"Year\"\n)\n\npopulation_information &lt;- c(\n  \"Number.of.Registered.Patients..Last.Known.Figure.\",\n  \"Number.of.Weighted.Patients..Last.Known.Figure.\",\n  \"Average.payments.per.registered.patient\",\n  \"Average.payments.per.weighted.patient\",\n  \"Average.payments.per.registered.patient.including.PCN.Workforce..Leadership.and.Support\",\n  \"Average.payments.per.weighted.patient.including.PCN.Workforce..Leadership.and.Support\",\n  \"Average.payments.per.registered.patient.including.covid.vaccination.and.covid.support.and.expansion.payments\",\n  \"Average.payments.per.weighted.patient.including.covid.vaccination.and.covid.support.and.expansion.payments\",\n  \"Average.payments.per.registered.patient.including.covid.vaccination..covid.support.and.long.covid.payments\",\n  \"Average.payments.per.weighted.patient.including.covid.vaccination..covid.support.and.long.covid.payments\"\n)\n\ntotals &lt;- c(\n  \"Total.NHS.Payments.to.General.Practice\",\n  # \"Total.NHS.Payments.to.General.Practice.including.Covid.and.PCN.payments\" is now Total.NHS.Payments.to.General.Practice\n  # Total.NHS.Payments.including.covid.vaccination.and.covid.support.and.expansion.payments = 2021, Total.NHS.Payments.to.General.Practice.including.covid.vaccination..covid.support.and.long.covid.payments = 2022:2023\n  # \"Total.NHS.Payments.to.General.Practice.including.covid.vaccination..covid.support.and.long.covid.payments\",\n  # \"Total.NHS.Payments.including.covid.vaccination.and.covid.support.and.expansion.payments\",\n  # \"Total.NHS.Payments.including.PCN.Workforce..Leadership.and.Support\",\n  \"Deductions.for.Pensions..Levies.and.Prescription.Charge.Income\",\n  \"Total.NHS.Payments.to.General.Practice.Minus.Deductions\",\n  # \"Total.NHS.Payments.to.General.Practice.including.Covid.and.PCN.payments.minus.deductions\",\n  \"Total.COVID.Payments\", \"Total.PCN.Payments\"\n)\n\nglobalSum &lt;- c(\n  # 2015\n  \"Global.Sum\", \"MPIG.Correction.factor\", \"Balance.of.PMS.Expenditure\"\n)\n\nITPremises &lt;- c(\n  # 2015\n  \"Premises.Payments\", \"Information.Management.and.Technology\"\n)\n\n# Seniority payments were made to principal GPs in recognition of their years of NHS reckonable service.\n# The scheme closed to new applicants on the 1 April, 2014 and the last payments were made at the end of March 2020.\nPCO &lt;- c(\n  # 2015\n  \"Seniority\", \"Doctors.Retainer.Scheme.Payments\", \"Total.Locum.Allowances\",\n  \"Appraisal.Costs\",\n  \"PCO.Admin.Other\", \"Other.Payments\",\n  \"General.Practice.Forward.View\",\n  \"General.Practice.Transformation\", \"winter.Access.Fund\",\n  \"Prolonged.Study.Leave\",\n  \"Appraisal...Appraiser.Costs.in.Respect.of.Locums\",\n  \"PCN.Participation\", \"PCN.Leadership\", \"PCN.Support\",\n  \"PCN.Extended.Hours.Access\", \"PCN.Workforce\",\n  \"PCN.Investment.and.impact.Fund\",\n  \"PCN.Care.Home.Premium\", \"PCN.Enhanced.Access\"\n)\n\nQOF &lt;- c(\"Total.QOF.Payments\")\n\ncontractedServices &lt;- c(\n  \"Alcohol\", \"Childhood.Vaccination.and.Immunisation.Scheme\",\n  \"GP.Extended.Hours.Access\",\n  \"Facilitating.Timely.Diagnosis.and.Support.for.People.with.Dementia\",\n  \"Improving.Patient.Online.Access\",\n  \"Influenza.and.Pneumococcal.Immunisations\", \"Learning.Disabilities\",\n  \"Minor.Surgery\", \"Patient.Participation\", \"Remote.Care.Monitoring\",\n  \"Risk.Profiling.and.Case.Management\", \"Rotavirus.and.Shingles.Immunisation\",\n  \"Services.for.Violent.Patients\", \"Unplanned.Admissions\",\n  \"Total.National.Enhanced.Services\", \"Total.Local.Enhanced.Services\",\n  \"Non.DES.Item.Pneumococcal.Vaccine..Childhood.Immunisation.Main.Programme\",\n  # 2016\n  \"Out.Of.Area.in.Hours.Urgent.Care\", \"Meningitis\",\n  # These 2 total to make Total.Local.Enhances.Services in 2016:\n  #    \"LocalEnhancedServices_NHAIS_\", \"LocalEnhancedServices_ISFE_\",\n  \"Pertussis\",\n  \"Total.Local.Incentive.Schemes\", \"Local.Incentive.Schemes\",\n  \"Weight.Management.Service\",\n  \"Medical.Assessment.Reviews\"\n  # \"Covid.Immunisation\", \"Covid.Support.and.Expansion\",\n  # \"Long.Covid\"\n)\n\nCOVID &lt;- c(\n  \"Covid.Immunisation\", \"Covid.Support.and.Expansion\",\n  \"Long.Covid\"\n)\n\nPrescribing &lt;- c(\n  \"Prescribing.Fee.Payments\", \"Dispensing.Fee.Payments\",\n  \"Reimbursement.of.Drugs\"\n)\n\nnhs_payments$Total.Global.Sum &lt;- rowSums(nhs_payments[, globalSum], na.rm = TRUE)\nnhs_payments$Total.IT.Premises &lt;- rowSums(nhs_payments[, ITPremises], na.rm = TRUE)\nnhs_payments$Total.PCO &lt;- rowSums(nhs_payments[, PCO], na.rm = TRUE)\nnhs_payments$Total.Contracted.Services &lt;- rowSums(nhs_payments[, contractedServices], na.rm = TRUE)\nnhs_payments$Total.Prescribing &lt;- rowSums(nhs_payments[, Prescribing], na.rm = TRUE)\nnhs_payments$Total.COVID &lt;- rowSums(nhs_payments[, COVID], na.rm = TRUE)\n\nnhs_payments %&gt;%\n  group_by(Year) %&gt;%\n  summarise(\n    `Global Sum` = sum(Total.Global.Sum, na.rm = TRUE),\n    `IT & Premises` = sum(Total.IT.Premises, na.rm = TRUE),\n    `PCO Payments` = sum(Total.PCO, na.rm = TRUE),\n    `Contracted Services` = sum(Total.Contracted.Services, na.rm = TRUE),\n    `Prescribing` = sum(Total.Prescribing, na.rm = TRUE),\n    `COVID-19` = sum(Total.COVID, na.rm = TRUE),\n    .groups = \"drop\"\n  ) %&gt;%\n  pivot_longer(cols = -Year, names_to = \"Payment Category\", values_to = \"Total (¬£)\") %&gt;%\n  mutate(`Total (¬£)` = label_comma()(round(`Total (¬£)`)))\n\n\n# A tibble: 54 √ó 3\n    Year `Payment Category`  `Total (¬£)`  \n   &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;        \n 1  2015 Global Sum          4,410,434,227\n 2  2015 IT & Premises       672,107,043  \n 3  2015 PCO Payments        611,784,475  \n 4  2015 Contracted Services 802,764,294  \n 5  2015 Prescribing         770,841,139  \n 6  2015 COVID-19            0            \n 7  2016 Global Sum          4,606,796,159\n 8  2016 IT & Premises       739,487,955  \n 9  2016 PCO Payments        462,787,554  \n10  2016 Contracted Services 901,854,909  \n# ‚Ñπ 44 more rows\n\n\n\n\nClick to show code\nsource(\"data/data_processing.R\")\n\n# Call the function to merge and assign national-level quintiles\nnhs_payments &lt;- merge_and_assign_quintiles(\n  data = nhs_payments,\n  start_year = 2015,\n  end_year = 2023\n)\n\n\n[1] \"Year: 2015\"\n\n   1    2    3    4    5 \n1589 1589 1588 1588 1588 \n[1] \"Year: 2016\"\n\n   1    2    3    4    5 \n1565 1565 1565 1565 1564 \n[1] \"Year: 2017\"\n\n   1    2    3    4    5 \n1547 1546 1546 1546 1546 \n[1] \"Year: 2018\"\n\n   1    2    3    4    5 \n1502 1502 1502 1502 1501 \n[1] \"Year: 2019\"\n\n   1    2    3    4    5 \n1453 1453 1453 1452 1452 \n[1] \"Year: 2020\"\n\n   1    2    3    4    5 \n1397 1396 1396 1396 1396 \n[1] \"Year: 2021\"\n\n   1    2    3    4    5 \n1357 1357 1357 1357 1357 \n[1] \"Year: 2022\"\n\n   1    2    3    4    5 \n1347 1347 1347 1347 1346 \n[1] \"Year: 2023\"\n\n   1    2    3    4    5 \n1329 1329 1328 1328 1328 \n\n\nClick to show code\n# Count missing IMD values per year\nnhs_payments %&gt;%\n  group_by(Year) %&gt;%\n  summarise(\n    missing_imd = sum(is.na(IMD))\n  )\n\n\n# A tibble: 9 √ó 2\n   Year missing_imd\n  &lt;dbl&gt;       &lt;int&gt;\n1  2015          17\n2  2016          17\n3  2017          32\n4  2018          34\n5  2019          16\n6  2020          20\n7  2021          23\n8  2022          24\n9  2023          27\n\n\n\n\nClick to show code\n# Calculate payments excluding COVID and PCN payments for consistency\npayments_clean &lt;- nhs_payments %&gt;%\n  mutate(\n    Total.NHS.Payments.Minus.COVID.PCN = Total.NHS.Payments.to.General.Practice -\n      ifelse(is.na(Total.COVID.Payments), 0, Total.COVID.Payments) -\n      ifelse(is.na(Total.PCN.Payments), 0, Total.PCN.Payments)\n  )\n\n# Calculate average payments per weighted patient by IMD quintile and year\npayments_by_imd &lt;- payments_clean %&gt;%\n  filter(!is.na(IMD_quintile)) %&gt;%\n  group_by(Year, IMD_quintile) %&gt;%\n  summarise(\n    total_registered_patients = sum(Number.of.Registered.Patients..Last.Known.Figure., na.rm = TRUE),\n    total_weighted_patients = sum(Number.of.Weighted.Patients..Last.Known.Figure., na.rm = TRUE),\n    total_payments = sum(Total.NHS.Payments.Minus.COVID.PCN, na.rm = TRUE),\n    .groups = \"drop\"\n  ) %&gt;%\n  mutate(\n    avg_payment_per_registered_patient = total_payments / total_registered_patients,\n    avg_payment_per_weighted_patient = total_payments / total_weighted_patients,\n    IMD_quintile = factor(IMD_quintile, levels = 1:5)\n  )\n\n# Create the plot\npayments_by_imd %&gt;%\n  ggplot(aes(\n    x = Year, y = avg_payment_per_weighted_patient,\n    color = IMD_quintile, group = IMD_quintile\n  )) +\n  geom_line(size = 1.2, alpha = 0.8) +\n  geom_point(size = 2.5, alpha = 0.9) +\n  scale_color_manual(\n    values = imd_colors,\n    name = \"IMD Quintile\",\n    labels = c(\"1 (least deprived)\", \"2\", \"3\", \"4\", \"5 (most deprived)\")\n  ) +\n  labs(\n    x = \"Year\",\n    y = \"Average payment per weighted patient (¬£)\",\n    title = \"NHS Payments per Weighted Patient by Deprivation Level\",\n    subtitle = \"Total NHS payments (excluding COVID and PCN) per weighted patient by IMD quintile\"\n  ) +\n  heec_theme +\n  theme(\n    legend.position = \"bottom\",\n    axis.text.x = element_text(angle = 0)\n  ) +\n  scale_y_continuous(labels = label_comma(prefix = \"¬£\")) +\n  scale_x_continuous(breaks = unique(payments_by_imd$Year)) +\n  guides(color = guide_legend(reverse = TRUE, nrow = 1))"
  },
  {
    "objectID": "README.html#age-group-data",
    "href": "README.html#age-group-data",
    "title": "Health Equity Evidence Centre",
    "section": "Age Group Data",
    "text": "Age Group Data\nThe Office for Health Improvement and Disparities (OHID) provides data on the proportion of GP registered populations by age group through the Fingertips platform. This data helps analyze how the age structure of practice populations affects NHS payments.\nThe data can be accessed through the Fingertips API using indicator ID 93468.\nExecute the following code to retrieve and process the age group data:\n\n\nClick to show code\n# Load age group data and merge with payments data\nage_data &lt;- read.csv(\"data/age_group/age.csv\") %&gt;%\n  filter(Year == 2023)\n\n# Merge age data with payments and IMD data\nage_analysis &lt;- nhs_payments %&gt;%\n  filter(Year == 2023) %&gt;%\n  inner_join(age_data, by = \"Practice.Code\") %&gt;%\n  filter(\n    Total.NHS.Payments.to.General.Practice &gt; 0,\n    Average.payments.per.registered.patient &lt; 600,\n    !is.na(prop65),\n    !is.na(IMD)\n  ) %&gt;%\n  mutate(\n    prop65_quintile = ntile(prop65, 5),\n    average_payment_per_patient = Total.NHS.Payments.to.General.Practice / Number.of.Registered.Patients..Last.Known.Figure.\n  )\n\n# Display basic statistics\nage_analysis %&gt;%\n  group_by(prop65_quintile) %&gt;%\n  summarise(\n    n_practices = n(),\n    mean_prop65 = mean(prop65, na.rm = TRUE),\n    mean_payment = mean(average_payment_per_patient, na.rm = TRUE),\n    mean_imd = mean(IMD, na.rm = TRUE),\n    .groups = \"drop\"\n  )\n\n\n# A tibble: 5 √ó 5\n  prop65_quintile n_practices mean_prop65 mean_payment mean_imd\n            &lt;int&gt;       &lt;int&gt;       &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;\n1               1        1271        7.97         153.     30.8\n2               2        1271       13.8          158.     27.6\n3               3        1270       17.9          168.     23.2\n4               4        1270       21.7          181.     19.2\n5               5        1270       28.0          230.     15.9\n\n\n\n\nClick to show code\n# Chart showing payments per patient by age quintile\npayment_by_age &lt;- age_analysis %&gt;%\n  group_by(prop65_quintile) %&gt;%\n  summarise(\n    avg_payment_per_patient = mean(average_payment_per_patient, na.rm = TRUE),\n    n_practices = n(),\n    .groups = \"drop\"\n  ) %&gt;%\n  mutate(\n    quintile_label = case_when(\n      prop65_quintile == 1 ~ \"Q1 (Youngest)\",\n      prop65_quintile == 2 ~ \"Q2\",\n      prop65_quintile == 3 ~ \"Q3\",\n      prop65_quintile == 4 ~ \"Q4\",\n      prop65_quintile == 5 ~ \"Q5 (Oldest)\"\n    ),\n    quintile_label = factor(quintile_label, levels = c(\"Q1 (Youngest)\", \"Q2\", \"Q3\", \"Q4\", \"Q5 (Oldest)\"))\n  )\n\npayment_by_age %&gt;%\n  ggplot(aes(x = quintile_label, y = avg_payment_per_patient, fill = factor(prop65_quintile))) +\n  geom_bar(stat = \"identity\", alpha = 0.8) +\n  scale_fill_manual(\n    values = imd_colors,\n    guide = \"none\"\n  ) +\n  labs(\n    title = \"NHS Payments per Patient by Age Structure of Practice Population\",\n    subtitle = \"Average payment per registered patient by proportion of patients 65+ (quintiles)\",\n    x = \"Proportion of Patients 65+ (Quintile)\",\n    y = \"Payment per patient (¬£)\"\n  ) +\n  heec_theme +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1)\n  ) +\n  scale_y_continuous(labels = label_comma(prefix = \"¬£\"))"
  },
  {
    "objectID": "README.html#satisfaction",
    "href": "README.html#satisfaction",
    "title": "Health Equity Evidence Centre",
    "section": "Satisfaction",
    "text": "Satisfaction\nThe GP Patient Survey is an independent survey run by Ipsos MORI on behalf of NHS England on the GP Patient Survey website. The survey is sent out to over a million people across the UK and covers a range of topics related to the quality of care provided by GP practices. The data from the survey is used to assess patient experience and satisfaction with GP services.\nAnnual practice-level .csv files are available [here].\nExecute the following code to merge the data to create a single time-series dataset:\n\n\nClick to show code\npractice_information &lt;- c(\"Practice_Code\", \"Practice_Name\", \"CCG_Code\", \"CCG_Name\", \"ICS_Code\", \"ICS_Name\")\n\n# Define the variable mappings as a named list\nvariable_mappings &lt;- list(\n  access_pct = \"Q3_12pct\",\n  continuity_pct = \"Q9_12pct\",\n  overall_pct = \"Q28_12pct\",\n  trust_pct_default = \"Q89_12pct\",\n  trust_pct_2017 = \"Q22_12pct\"\n)\n\n# Initialize empty data frames\nsatisfaction &lt;- data.frame()\ntrust &lt;- data.frame()\n\n# Function to load and process a single file\nprocess_file &lt;- function(file, variables) {\n  df &lt;- read.csv(paste0(\"data/satisfaction/raw/\", file))\n\n  # Select CCG or ICB Code\n  dataset_columns &lt;- colnames(df)\n  selected_column_names &lt;- intersect(practice_information, dataset_columns)\n  df &lt;- df[, c(selected_column_names, variables)]\n\n  # Assign year\n  year &lt;- substr(file, 1, nchar(file) - 4)\n  df$Year &lt;- as.numeric(year)\n\n  return(df)\n}\n\n# Process all files for satisfaction\nfor (file in list.files(\"data/satisfaction/raw/\")) {\n  df &lt;- process_file(file, unlist(variable_mappings[-c(4, 5)])) # Exclude trust variables, as the variable code is not consistent; it will be collated separately\n  satisfaction &lt;- bind_rows(satisfaction, df)\n}\n\n# Process a subset of files for trust\nfor (file in list.files(\"data/satisfaction/raw/\")) {\n  year &lt;- as.numeric(substr(file, 1, nchar(file) - 4))\n  trust_variable &lt;- ifelse(year == 2017, variable_mappings$trust_pct_2017, variable_mappings$trust_pct_default)\n  df &lt;- process_file(file, c(\"Practice_Code\", trust_variable))\n\n  # Rename the trust column to a common name for merging\n  colnames(df)[colnames(df) == trust_variable] &lt;- \"trust_pct\"\n\n  trust &lt;- bind_rows(trust, df)\n}\n\n# Keep only the relevant columns in trust\ntrust &lt;- trust[, c(\"Practice_Code\", \"trust_pct\", \"Year\")]\n\n# Merge satisfaction and trust data frames\nsatisfaction &lt;- merge(satisfaction, trust, by = c(\"Practice_Code\", \"Year\"), all.x = TRUE)\n\n# Rename columns based on variable_mappings\nfor (new_name in names(variable_mappings)[-c(4, 5)]) { # Exclude trust variables\n  old_name &lt;- variable_mappings[[new_name]]\n  colnames(satisfaction)[colnames(satisfaction) == old_name] &lt;- new_name\n}\n\n# Rename Practice_Code and Practice_Name\nsatisfaction &lt;- satisfaction %&gt;%\n  rename(\n    `Practice.Code` = Practice_Code,\n    `Practice.Name` = Practice_Name\n  )\n\n# drop rows where pct is negative\nsatisfaction$overall_pct &lt;- ifelse(satisfaction$overall_pct &lt; 0, NA, satisfaction$overall_pct)\nsatisfaction$access_pct &lt;- ifelse(satisfaction$access_pct &lt; 0, NA, satisfaction$access_pct)\nsatisfaction$continuity_pct &lt;- ifelse(satisfaction$continuity_pct &lt; 0, NA, satisfaction$continuity_pct)\nsatisfaction$trust_pct &lt;- ifelse(satisfaction$trust_pct &lt; 0, NA, satisfaction$trust_pct)\n\nsatisfaction %&gt;%\n  group_by(Year) %&gt;%\n  summarise(\n    mean_overall = mean(overall_pct, na.rm = TRUE),\n    sd_overall = sd(overall_pct, na.rm = TRUE),\n    min_overall = min(overall_pct, na.rm = TRUE),\n    max_overall = max(overall_pct, na.rm = TRUE),\n    n = n()\n  )\n\n\n# A tibble: 8 √ó 6\n   Year mean_overall sd_overall min_overall max_overall     n\n  &lt;dbl&gt;        &lt;dbl&gt;      &lt;dbl&gt;       &lt;dbl&gt;       &lt;dbl&gt; &lt;int&gt;\n1  2017        0.849     0.0972       0.289           1  7522\n2  2018        0.840     0.0982       0.373           1  7254\n3  2019        0.834     0.0984       0.322           1  6999\n4  2020        0.824     0.103        0.370           1  6821\n5  2021        0.834     0.0943       0.296           1  6658\n6  2022        0.734     0.131        0.276           1  6507\n7  2023        0.727     0.134        0.112           1  6418\n8  2024        0.754     0.123        0.244           1  6307\n\n\n\n\nClick to show code\n# match CCG.Code in df with CCG.Code in CCG_ICB and return ICB.Code\nsatisfaction$ICB.NAME &lt;- CCG_ICB[match(satisfaction$CCG_Code, CCG_ICB$CCG.Code), ]$ICB.NAME\nsatisfaction[is.na(satisfaction$ICB.NAME), ]$ICB.NAME &lt;- CCG_ICB[match(satisfaction[is.na(satisfaction$ICB.NAME), ]$ICS_Code, CCG_ICB$ICB.Code), ]$ICB.NAME\n\nsatisfaction$ICB.NAME &lt;- gsub(\"NHS \", \"\", satisfaction$ICB.NAME)\nsatisfaction$ICB.NAME &lt;- gsub(\" Integrated Care Board\", \"\", satisfaction$ICB.NAME)\n\nsatisfaction &lt;- satisfaction[, c(\"Practice.Code\", \"Practice.Name\", \"ICB.NAME\", \"Year\", \"overall_pct\", \"continuity_pct\", \"access_pct\", \"trust_pct\")]\n\n# Call the function to merge and assign national-level quintiles\nsatisfaction &lt;- merge_and_assign_quintiles(\n  data = satisfaction\n)\n\n\n[1] \"Year: 2016\"\n&lt; table of extent 0 &gt;\n[1] \"Year: 2017\"\n\n   1    2    3    4    5 \n1502 1502 1502 1502 1502 \n[1] \"Year: 2018\"\n\n   1    2    3    4    5 \n1447 1447 1447 1447 1447 \n[1] \"Year: 2019\"\n\n   1    2    3    4    5 \n1400 1400 1399 1399 1399 \n[1] \"Year: 2020\"\n\n   1    2    3    4    5 \n1363 1363 1363 1363 1362 \n[1] \"Year: 2021\"\n\n   1    2    3    4    5 \n1330 1330 1329 1329 1329 \n[1] \"Year: 2022\"\n\n   1    2    3    4    5 \n1298 1298 1298 1297 1297 \n[1] \"Year: 2023\"\n\n   1    2    3    4    5 \n1279 1279 1279 1279 1278 \n[1] \"Year: 2024\"\n\n   1    2    3    4    5 \n1257 1257 1256 1256 1256 \n[1] \"Year: 2025\"\n&lt; table of extent 0 &gt;\n\n\nClick to show code\nsatisfaction %&gt;%\n  group_by(Year) %&gt;%\n  summarise(\n    missing_imd = sum(is.na(IMD))\n  )\n\n\n# A tibble: 8 √ó 2\n   Year missing_imd\n  &lt;dbl&gt;       &lt;int&gt;\n1  2017          12\n2  2018          19\n3  2019           2\n4  2020           7\n5  2021          11\n6  2022          19\n7  2023          24\n8  2024          25\n\n\n\n\nClick to show code\n# Calculate overall satisfaction by IMD quintile and year\nsatisfaction &lt;- read.csv('data/satisfaction/satisfaction.csv')\nsatisfaction_by_imd &lt;- satisfaction %&gt;%\n  filter(!is.na(IMD_quintile), !is.na(overall_pct)) %&gt;%\n  group_by(Year, IMD_quintile) %&gt;%\n  summarise(\n    mean_satisfaction = mean(overall_pct, na.rm = TRUE),\n    median_satisfaction = median(overall_pct, na.rm = TRUE),\n    n_practices = n(),\n    .groups = \"drop\"\n  ) %&gt;%\n  mutate(\n    IMD_quintile = factor(IMD_quintile, levels = 1:5)\n  )\n\n# Create the plot\nsatisfaction_by_imd %&gt;%\n  ggplot(aes(\n    x = Year, y = mean_satisfaction,\n    color = IMD_quintile, group = IMD_quintile\n  )) +\n  geom_line(size = 1.2, alpha = 0.8) +\n  geom_point(size = 2.5, alpha = 0.9) +\n  scale_color_manual(\n    values = imd_colors,\n    name = \"IMD Quintile\",\n    labels = c(\"1 (least deprived)\", \"2\", \"3\", \"4\", \"5 (most deprived)\")\n  ) +\n  labs(\n    x = \"Year\",\n    y = \"Overall satisfaction (%)\",\n    title = \"Patient Satisfaction with GP Services by Deprivation Level\",\n    subtitle = \"Percentage of patients reporting good overall experience by IMD quintile\"\n  ) +\n  heec_theme +\n  theme(\n    legend.position = \"bottom\",\n    axis.text.x = element_text(angle = 0)\n  ) +\n  scale_x_continuous(breaks = unique(satisfaction_by_imd$Year)) +\n  guides(color = guide_legend(reverse = TRUE, nrow = 1))"
  },
  {
    "objectID": "README.html#gp-workforce",
    "href": "README.html#gp-workforce",
    "title": "Health Equity Evidence Centre",
    "section": "GP Workforce",
    "text": "GP Workforce\nNHS Digital provides monthly data on the general practice workforce, including fully-qualified GPs, locums, nurses, and administrative staff. The data is reported annually from September 2015-2020, quarterly from December 2020-June 2021, and monthly from July 2021 onwards.\nRationale for Annual Grouping: Monthly workforce data exhibits natural fluctuations due to factors such as training cycles, holiday periods, and staff recruitment patterns. Aggregating to annual data provides several advantages:\n\nConsistency with financial reporting: Using financial year grouping (April-March) aligns with NHS budget cycles and other healthcare datasets in this analysis\nSmoothing seasonal variation: Monthly variations in staffing can obscure underlying trends and make year-over-year comparisons less reliable\nData completeness: Not all practices report workforce data every month, so annual aggregation maximizes data coverage\nImproved analytical stability: Annual averages reduce the impact of temporary staffing changes and provide more stable metrics for comparative analysis\n\n\n\nClick to show code\n# Load and process GP workforce data\nworkforce_files &lt;- list.files(\"data/workforce/raw/\", full.names = TRUE)\nworkforce &lt;- data.frame()\n\nfor (file in workforce_files) {\n  df &lt;- read.csv(file)[c(\n    \"PRAC_CODE\", \"TOTAL_PATIENTS\", \"TOTAL_GP_EXTGL_FTE\", \"TOTAL_GP_FTE\", \n    \"TOTAL_NURSES_FTE\", \"TOTAL_GP_EXL_FTE\", \"TOTAL_DPC_FTE\", \"TOTAL_ADMIN_FTE\",\n    \"TOTAL_GP_SEN_PTNR_FTE\", \"TOTAL_GP_PTNR_PROV_FTE\", \"TOTAL_N_NURSE_PTNR_FTE\",\n    \"TOTAL_ADMIN_MANAGE_PTNR_FTE\"\n  )]\n  \n  # Extract year and month from filename\n  filename &lt;- basename(file)\n  parts &lt;- strsplit(filename, \"_\")[[1]]\n  year &lt;- as.numeric(parts[1])\n  month &lt;- as.numeric(gsub(\"\\\\.csv\", \"\", parts[2]))\n  \n  df$Year &lt;- year\n  df$Month &lt;- month\n  \n  # Determine financial year (April-March)\n  if (month &gt;= 4) {\n    df$fiscal_year &lt;- paste0(\"20\", year + 1)\n  } else {\n    df$fiscal_year &lt;- paste0(\"20\", year)\n  }\n  \n  workforce &lt;- rbind(workforce, df)\n}\n\n# Convert to numeric\nnumeric_cols &lt;- c(\"TOTAL_PATIENTS\", \"TOTAL_GP_EXTGL_FTE\", \"TOTAL_GP_FTE\", \n                  \"TOTAL_NURSES_FTE\", \"TOTAL_GP_EXL_FTE\", \"TOTAL_DPC_FTE\", \n                  \"TOTAL_ADMIN_FTE\", \"TOTAL_GP_SEN_PTNR_FTE\", \"TOTAL_GP_PTNR_PROV_FTE\",\n                  \"TOTAL_N_NURSE_PTNR_FTE\", \"TOTAL_ADMIN_MANAGE_PTNR_FTE\")\n\nworkforce[numeric_cols] &lt;- lapply(workforce[numeric_cols], as.numeric)\n\n# Create derived variables\nworkforce &lt;- workforce %&gt;%\n  mutate(\n    TOTAL_LOCUUM_TRN_FTE = TOTAL_GP_FTE - TOTAL_GP_EXTGL_FTE,\n    TOTAL_PTNR_PER_GP_FTE = (TOTAL_GP_PTNR_PROV_FTE + TOTAL_GP_SEN_PTNR_FTE) / TOTAL_GP_EXTGL_FTE\n  )\n\n# Calculate annual averages by practice and fiscal year\nworkforce_annual &lt;- workforce %&gt;%\n  group_by(PRAC_CODE, fiscal_year) %&gt;%\n  summarise(\n    TOTAL_PATIENTS = mean(TOTAL_PATIENTS, na.rm = TRUE),\n    TOTAL_GP_EXTGL_FTE = round(mean(TOTAL_GP_EXTGL_FTE, na.rm = TRUE), 1),\n    TOTAL_LOCUUM_TRN_FTE = round(mean(TOTAL_LOCUUM_TRN_FTE, na.rm = TRUE), 1),\n    TOTAL_NURSES_FTE = round(mean(TOTAL_NURSES_FTE, na.rm = TRUE), 1),\n    TOTAL_DPC_FTE = round(mean(TOTAL_DPC_FTE, na.rm = TRUE), 1),\n    TOTAL_ADMIN_FTE = round(mean(TOTAL_ADMIN_FTE, na.rm = TRUE), 1),\n    TOTAL_GP_SEN_PTNR_FTE = round(mean(TOTAL_GP_SEN_PTNR_FTE, na.rm = TRUE), 1),\n    TOTAL_GP_PTNR_PROV_FTE = round(mean(TOTAL_GP_PTNR_PROV_FTE, na.rm = TRUE), 1),\n    TOTAL_N_NURSE_PTNR_FTE = round(mean(TOTAL_N_NURSE_PTNR_FTE, na.rm = TRUE), 1),\n    TOTAL_ADMIN_MANAGE_PTNR_FTE = round(mean(TOTAL_ADMIN_MANAGE_PTNR_FTE, na.rm = TRUE), 1),\n    TOTAL_PTNR_PER_GP_FTE = round(mean(TOTAL_PTNR_PER_GP_FTE, na.rm = TRUE), 1),\n    .groups = \"drop\"\n  ) %&gt;%\n  rename(Practice.Code = PRAC_CODE, Year = fiscal_year)\n\n# Merge with IMD data and assign quintiles\nworkforce_annual &lt;- merge_and_assign_quintiles(\n  data = workforce_annual,\n  start_year = 2016,\n  end_year = 2024\n)\n\n\n[1] \"Year: 2016\"\n\n   1    2    3    4    5 \n1524 1524 1524 1524 1523 \n[1] \"Year: 2017\"\n\n   1    2    3    4    5 \n1508 1508 1507 1507 1507 \n[1] \"Year: 2018\"\n\n   1    2    3    4    5 \n1467 1467 1466 1466 1466 \n[1] \"Year: 2019\"\n\n   1    2    3    4    5 \n1427 1426 1426 1426 1426 \n[1] \"Year: 2020\"\n\n   1    2    3    4    5 \n1372 1371 1371 1371 1371 \n[1] \"Year: 2021\"\n\n   1    2    3    4    5 \n1327 1327 1327 1327 1327 \n[1] \"Year: 2022\"\n\n   1    2    3    4    5 \n1313 1313 1313 1313 1312 \n[1] \"Year: 2023\"\n\n   1    2    3    4    5 \n1295 1295 1295 1295 1295 \n[1] \"Year: 2024\"\n\n   1    2    3    4    5 \n1274 1274 1274 1273 1273 \n\n\nClick to show code\nworkforce_annual$ICB.NAME &lt;- CCG_ICB[match(workforce_annual$Practice.Code, CCG_ICB$Practice.Code), ]$ICB.NAME\n\n# Display summary statistics\nworkforce_annual %&gt;%\n  group_by(Year) %&gt;%\n  summarise(\n    practices = n(),\n    avg_gp_fte = mean(TOTAL_GP_EXTGL_FTE, na.rm = TRUE),\n    avg_admin_fte = mean(TOTAL_ADMIN_FTE, na.rm = TRUE),\n    avg_patients = mean(TOTAL_PATIENTS, na.rm = TRUE)\n  )\n\n\n# A tibble: 10 √ó 5\n   Year  practices avg_gp_fte avg_admin_fte avg_patients\n   &lt;chr&gt;     &lt;int&gt;      &lt;dbl&gt;         &lt;dbl&gt;        &lt;dbl&gt;\n 1 2016       7623       3.59          7.53        7465.\n 2 2017       7558       3.70          8.31        7654.\n 3 2018       7354       3.76          8.59        7978.\n 4 2019       7137       3.83          9.16        8315.\n 5 2020       6867       3.95          9.80        8737.\n 6 2021       6652       4.07         10.4         9115.\n 7 2022       6587       4.09         10.8         9320.\n 8 2023       6503       4.12         11.3         9557.\n 9 2024       6395       4.21         11.8         9850.\n10 2025       6293       4.35         12.2        10099.\n\n\nClick to show code\n# Create GP workforce per patient chart by deprivation level\nworkforce_by_imd &lt;- workforce_annual %&gt;%\n  filter(!is.na(IMD_quintile)) %&gt;%\n  mutate(Year = as.numeric(Year)) %&gt;%\n  group_by(Year, IMD_quintile) %&gt;%\n  summarise(\n    total_patients = sum(TOTAL_PATIENTS, na.rm = TRUE),\n    total_gp_fte = sum(TOTAL_GP_EXTGL_FTE, na.rm = TRUE),\n    .groups = \"drop\"\n  ) %&gt;%\n  mutate(\n    gp_fte_per_10000_patients = (total_gp_fte / total_patients) * 10000,\n    IMD_quintile = factor(IMD_quintile, levels = 1:5)\n  )\n\n# Create the workforce chart\nworkforce_by_imd %&gt;%\n  ggplot(aes(\n    x = Year, y = gp_fte_per_10000_patients,\n    color = IMD_quintile, group = IMD_quintile\n  )) +\n  geom_line(size = 1.2, alpha = 0.8) +\n  geom_point(size = 2.5, alpha = 0.9) +\n  scale_color_manual(\n    values = imd_colors,\n    name = \"IMD Quintile\",\n    labels = c(\"1 (least deprived)\", \"2\", \"3\", \"4\", \"5 (most deprived)\")\n  ) +\n  labs(\n    x = \"Year\",\n    y = \"GP FTE per 10,000 patients\",\n    title = \"GP Workforce Density by Deprivation Level\",\n    subtitle = \"Fully qualified GP FTE per 10,000 patients by IMD quintile\"\n  ) +\n  heec_theme +\n  theme(\n    legend.position = \"bottom\",\n    axis.text.x = element_text(angle = 0)\n  ) +\n  scale_x_continuous(breaks = unique(workforce_by_imd$Year)) +\n  guides(color = guide_legend(reverse = TRUE, nrow = 1))"
  },
  {
    "objectID": "README.html#gp-earnings",
    "href": "README.html#gp-earnings",
    "title": "Health Equity Evidence Centre",
    "section": "GP Earnings",
    "text": "GP Earnings\nNHS Digital publishes annual data on GP earnings based on tax returns submitted by GP practices. This dataset provides insights into GP income levels across different practice types, geographical regions, and practice characteristics from 2016-2023.\nThe earnings data includes total earnings, expenses, income before tax for both partners and salaried GPs, income distribution percentiles, and inflation-adjusted figures using GDP deflator and RPI.\n\n\nClick to show code\n# Load GP earnings data\ngp_earnings &lt;- read.csv(\"data/GP_earnings/raw/GP_earn_exp.csv\")\n\n# Display basic structure\nhead(gp_earnings)\n\n\n  Country Region Practice.type Rurality Size Year Mean.Total.Partners.HC\n1 England    All           All      All  All 2016                   3.13\n2 England    All           All      All  All 2017                   3.15\n3 England    All           All      All  All 2018                   3.12\n4 England    All           All      All  All 2019                   3.14\n5 England    All           All      All  All 2020                   3.13\n6 England    All           All      All  All 2021                   3.08\n  Mean.Total.Partners.FTE Mean.Total.GP..fully.qualified..HC\n1                    2.74                               4.87\n2                    2.72                               5.22\n3                    2.68                               5.31\n4                    2.68                               5.57\n5                    2.65                               5.78\n6                    2.58                               5.89\n  Mean.Total.GP..fully.qualified..FTE Mean.Male.Partners.HC\n1                                3.80                  1.79\n2                                3.93                  1.79\n3                                3.96                  1.76\n4                                4.10                  1.75\n5                                4.20                  1.73\n6                                4.23                  1.69\n  Mean.Female.Partners.HC Mean.Total.GP.HC Mean.Total.GP.FTE\n1                    1.34             5.13              4.03\n2                    1.36             5.47              4.14\n3                    1.36             6.04              4.68\n4                    1.39             6.43              4.93\n5                    1.40             6.81              5.20\n6                    1.39             7.09              5.41\n  Mean.Total.Payments Mean.Total.Payments.incl.COVID.PCN\n1              940025                                 NA\n2             1047506                                 NA\n3             1103759                                 NA\n4             1174592                                 NA\n5             1238576                                 NA\n6             1309267                                 NA\n  Payments.per.Partner.HC Total.Earnings Total.Expenses\n1                300327.5         314900         210000\n2                332541.6         338300         228700\n3                353768.9         357300         243900\n4                374073.9         380900         263600\n5                395711.2         402600         280800\n6                425086.7         438700         296700\n  Income.before.tax.D1..salaried. Income.before.tax..salaried.\n1                           27700                        55900\n2                           27800                        56600\n3                           28200                        58400\n4                           29700                        60600\n5                           31800                        63600\n6                           32000                        64900\n  Income.before.tax.D9..salaried. Income.before.tax.D1..contractor.\n1                           86800                             54700\n2                           89400                             56800\n3                           92900                             58200\n4                           95600                             62300\n5                           99000                             66400\n6                          101600                             77200\n  Income.before.tax..contractor. Income.before.tax.D9..contractor.\n1                         104900                            151900\n2                         109600                            158300\n3                         113400                            165500\n4                         117300                            177400\n5                         121800                            183900\n6                         142000                            215600\n  Income.before.tax..GDP.deflator. Income.before.tax..RPI.deflator. GDP.delator\n1                           127100                           142000        1.21\n2                           122900                           145300        1.12\n3                           132300                           144900        1.17\n4                           134000                           145400        1.14\n5                           135900                           147200        1.12\n6                           150300                           169500        1.06\n  RPI.deflator Report.population\n1         1.35             18300\n2         1.33             19850\n3         1.28             20350\n4         1.24             20300\n5         1.21             19250\n6         1.19             18600\n\n\nClick to show code\n# Create dispensing vs non-dispensing partner income chart\npractice_type_earnings &lt;- gp_earnings %&gt;%\n  filter(\n    Country == \"England\",\n    Region == \"All\",\n    Practice.type %in% c(\"Dispensing\", \"Non-dispensing\"),\n    Rurality == \"All\",\n    Size == \"All\"\n  ) %&gt;%\n  mutate(Year = as.numeric(Year)) %&gt;%\n  filter(!is.na(Year))\n\n# Create partner income chart by practice size\npractice_size_earnings &lt;- gp_earnings %&gt;%\n  filter(\n    Country == \"England\",\n    Region == \"All\",\n    Practice.type == \"All\",\n    Rurality == \"All\",\n    Size != \"All\"\n  ) %&gt;%\n  mutate(Year = as.numeric(Year)) %&gt;%\n  filter(!is.na(Year))\n\n# Create the practice size comparison chart\npractice_size_earnings %&gt;%\n  ggplot(aes(x = Year, y = Income.before.tax..contractor., color = Size)) +\n  geom_line(size = 1.2) +\n  geom_point(size = 2.5) +\n  scale_color_manual(values = heec_colors) +\n  labs(\n    x = \"Year\",\n    y = \"Partner income before tax (¬£)\",\n    title = \"Partner Income by Practice List Size\",\n    subtitle = \"Partner income before tax by practice size over time\",\n    color = \"Practice Size\"\n  ) +\n  heec_theme +\n  theme(\n    legend.position = \"bottom\",\n    axis.text.x = element_text(angle = 0)\n  ) +\n  scale_y_continuous(labels = label_comma(prefix = \"¬£\")) +\n  scale_x_continuous(breaks = unique(practice_size_earnings$Year))"
  },
  {
    "objectID": "README.html#structural-inequalities-in-primary-care-the-facts-and-figures",
    "href": "README.html#structural-inequalities-in-primary-care-the-facts-and-figures",
    "title": "Health Equity Evidence Centre",
    "section": "1. Structural inequalities in primary care ‚Äì the facts and figures",
    "text": "1. Structural inequalities in primary care ‚Äì the facts and figures\nThe factors determining the quality and quantity of primary care services vary across England. Here we analyse practice level data relating to the supply, demand, and need for primary care, according to the socioeconomic status of the patients served.\n\n\nClick to show code\npayments &lt;- read.csv(\"data/payments/payments.csv\")\n\nagg &lt;- payments[payments$Year == 2023, ] %&gt;%\n  group_by(ICB.NAME) %&gt;%\n  summarise(\n    Registered = sum(Number.of.Registered.Patients..Last.Known.Figure., na.rm = TRUE),\n    Weighted = sum(Number.of.Weighted.Patients..Last.Known.Figure., na.rm = TRUE)\n  )\n\nagg$Difference &lt;- agg$Weighted - agg$Registered\nagg$Percent.change &lt;- agg$Difference / agg$Registered\n\n# sort by ascending difference\nagg &lt;- agg[order(agg$Percent.change), ]\n\n# Create consistent chart\nagg %&gt;%\n  mutate(ICB.NAME = factor(ICB.NAME, levels = unique(ICB.NAME))) %&gt;%\n  ggplot(aes(x = reorder(ICB.NAME, Percent.change), y = Percent.change, fill = ICB.NAME)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_manual(values = rep(my_colors, length.out = 42)) +\n  labs(\n    x = \"Integrated Care Board\",\n    y = \"Percent difference\",\n    title = \"Percentage Difference between Registered and Weighted Patients\",\n    subtitle = \"Higher values indicate greater healthcare need relative to population size\"\n  ) +\n  heec_theme +\n  theme(legend.position = \"none\") +\n  scale_y_continuous(labels = percent_format(accuracy = 1))\n\n\n\n\n\n\n\n\n\n\n\nClick to show code\n# Calculate total count by Year, ICB.NAME\ntotal_counts &lt;- payments %&gt;%\n  filter(Year == 2019) %&gt;%\n  group_by(Year, ICB.NAME) %&gt;%\n  summarise(total = n(), .groups = \"drop\")\n\n# Calculate count and percentage by IMD_quintile for all ICBs\nresult &lt;- payments %&gt;%\n  filter(Year == 2019) %&gt;%\n  group_by(Year, IMD_quintile, ICB.NAME) %&gt;%\n  summarise(n = n(), .groups = \"drop\") %&gt;%\n  left_join(total_counts, by = c(\"Year\", \"ICB.NAME\")) %&gt;%\n  mutate(perc = (n / total) * 100) %&gt;%\n  select(Year, ICB.NAME, IMD_quintile, n, perc)\n\n# Prepare data for visualization\nt &lt;- result %&gt;%\n  filter(!is.na(IMD_quintile)) %&gt;%\n  complete(ICB.NAME, IMD_quintile = 1:5, fill = list(perc = 0))\n\n# Calculate the percentage of practices in most deprived quintile for ordering\nordered_ICB &lt;- t %&gt;%\n  filter(IMD_quintile == 5) %&gt;%\n  group_by(ICB.NAME) %&gt;%\n  summarize(max_perc = max(perc, na.rm = TRUE)) %&gt;%\n  arrange(desc(max_perc)) %&gt;%\n  pull(ICB.NAME)\n\n# Reorder ICB names and create proper factor levels\nt &lt;- t %&gt;%\n  mutate(\n    ICB.NAME = factor(ICB.NAME, levels = ordered_ICB),\n    IMD_quintile = factor(IMD_quintile, levels = 1:5)\n  )\n\n# Create the plot\nt %&gt;%\n  ggplot(aes(x = ICB.NAME, y = perc, fill = IMD_quintile)) +\n  geom_bar(stat = \"identity\", position = \"fill\", width = 0.8) +\n  scale_y_continuous(labels = percent_format(accuracy = 1)) +\n  scale_fill_manual(\n    values = imd_colors,\n    name = \"IMD Quintile\",\n    labels = c(\"1 (least deprived)\", \"2\", \"3\", \"4\", \"5 (most deprived)\")\n  ) +\n  labs(\n    x = \"Integrated Care Board\",\n    y = \"Percentage of practices\",\n    title = \"Distribution of GP Practices by Deprivation Quintile\",\n    subtitle = \"Percentage of practices in each IMD quintile by ICB (2019)\"\n  ) +\n  heec_theme +\n  theme(\n    legend.position = \"bottom\",\n    axis.text.x = element_text(angle = 0, hjust = 0.5, size = 9)\n  ) +\n  coord_flip() +\n  guides(fill = guide_legend(reverse = TRUE, nrow = 1))\n\n\n\n\n\n\n\n\n\nQOF Shiny App"
  },
  {
    "objectID": "README.html#nhs-payments-to-practices-in-the-east-of-england",
    "href": "README.html#nhs-payments-to-practices-in-the-east-of-england",
    "title": "Health Equity Evidence Centre",
    "section": "2. NHS payments to practices in the East of England",
    "text": "2. NHS payments to practices in the East of England\nIn this resource, we explore structural inequalities in primary care at the ICB level in the East of England. We provide data on NHS payments to GP surgeries, payments per weighted patient and patient satisfaction, showing differences across socioeconomic groups.\n\nCharts:\n\nPayments per weighted patient\nTotal payments by type\nOverall experience by ICB"
  },
  {
    "objectID": "README.html#what-does-the-latest-gp-patient-survey-tell-us-about-socio-economic-inequalities-in-general-practice",
    "href": "README.html#what-does-the-latest-gp-patient-survey-tell-us-about-socio-economic-inequalities-in-general-practice",
    "title": "Health Equity Evidence Centre",
    "section": "3. What does the latest GP Patient Survey tell us about socio-economic inequalities in general practice?",
    "text": "3. What does the latest GP Patient Survey tell us about socio-economic inequalities in general practice?\nOverall patient satisfaction with general practice has improved slightly according to the GP Patient Survey 2024, but remains substantially lower than pre-pandemic levels. Patient satisfaction is not the same across the country. Read more to understand inequalities in patient satisfaction from the latest data.\n\nCharts:\n\nGPPS by ICB\nOverall satisfaction\nExperience contacting surgery\nContinuity\nConfidence"
  },
  {
    "objectID": "README.html#exploring-the-impact-of-dispensing-practices-on-equity-in-nhs-payments-to-general-practices",
    "href": "README.html#exploring-the-impact-of-dispensing-practices-on-equity-in-nhs-payments-to-general-practices",
    "title": "Health Equity Evidence Centre",
    "section": "4. Exploring the impact of dispensing practices on equity in NHS payments to general practices",
    "text": "4. Exploring the impact of dispensing practices on equity in NHS payments to general practices\nIn 2023, 6,669 general practices received ¬£10.2 billion in NHS funding across England, increasing to ¬£11 billion with COVID-related and Primary Care Network (PCN) payments. Almost 10% of this‚Äî¬£870 million‚Äîwas allocated to prescribing- and dispensing-related payments, supporting 944 dispensing practices serving 9.5 million patients (¬£625 million) and 5,537 non-dispensing practices covering 53 million patients (¬£245 million).\n\n\nClick to show code\n# Use the most recent year of payments data (2023)\ndispensing_data &lt;- payments %&gt;%\n  filter(Year == 2023, !is.na(IMD_quintile))\n\n# Calculate average payment per weighted patient for dispensing vs non-dispensing practices\n# by IMD quintile (comparing Q1 and Q5 only)\ndispensing_comparison &lt;- dispensing_data %&gt;%\n  filter(\n    IMD_quintile %in% c(1, 5),\n    Dispensing.Practice %in% c(\"Yes\", \"No\")\n  ) %&gt;%\n  group_by(IMD_quintile, Dispensing.Practice) %&gt;%\n  summarise(\n    total_payments = sum(Total.NHS.Payments.to.General.Practice, na.rm = TRUE),\n    total_weighted_patients = sum(Number.of.Weighted.Patients..Last.Known.Figure., na.rm = TRUE),\n    .groups = \"drop\"\n  ) %&gt;%\n  mutate(\n    payment_per_patient = total_payments / total_weighted_patients\n  )\n\n# Add overall averages for Q1 and Q5\noverall_comparison &lt;- dispensing_data %&gt;%\n  filter(IMD_quintile %in% c(1, 5)) %&gt;%\n  group_by(IMD_quintile) %&gt;%\n  summarise(\n    total_payments = sum(Total.NHS.Payments.to.General.Practice, na.rm = TRUE),\n    total_weighted_patients = sum(Number.of.Weighted.Patients..Last.Known.Figure., na.rm = TRUE),\n    .groups = \"drop\"\n  ) %&gt;%\n  mutate(\n    payment_per_patient = total_payments / total_weighted_patients,\n    Dispensing.Practice = \"All practices\"\n  ) %&gt;%\n  select(IMD_quintile, Dispensing.Practice, payment_per_patient)\n\n# Combine the data\nplot_data &lt;- dispensing_comparison %&gt;%\n  select(IMD_quintile, Dispensing.Practice, payment_per_patient) %&gt;%\n  bind_rows(overall_comparison) %&gt;%\n  mutate(\n    Dispensing.Practice = case_when(\n      Dispensing.Practice == \"Yes\" ~ \"Dispensing practices\",\n      Dispensing.Practice == \"No\" ~ \"Non-dispensing practices\",\n      TRUE ~ Dispensing.Practice\n    ),\n    Dispensing.Practice = factor(\n      Dispensing.Practice,\n      levels = c(\"Dispensing practices\", \"Non-dispensing practices\", \"All practices\")\n    ),\n    IMD_quintile = factor(IMD_quintile, levels = c(1, 5))\n  )\n\n# Create the plot\nplot_data %&gt;%\n  ggplot(aes(x = payment_per_patient, y = Dispensing.Practice, color = IMD_quintile)) +\n  geom_point(size = 4, alpha = 0.8) +\n  scale_color_manual(\n    values = c(\"1\" = heec_colors[1], \"5\" = heec_colors[3]),\n    labels = c(\"Least deprived (Q1)\", \"Most deprived (Q5)\")\n  ) +\n  labs(\n    title = \"NHS Payments per Weighted Patient by Practice Type and Deprivation\",\n    subtitle = \"Comparison between most and least deprived areas (2023)\",\n    x = \"Payment per weighted patient (¬£)\",\n    y = \"\",\n    color = \"IMD Quintile\"\n  ) +\n  heec_theme +\n  theme(\n    legend.position = \"bottom\",\n    axis.title.y = element_blank(),\n    panel.grid.major.y = element_line(color = \"grey90\"),\n    panel.grid.minor.y = element_blank()\n  ) +\n  scale_x_continuous(labels = label_comma(prefix = \"¬£\")) +\n  guides(color = guide_legend(nrow = 1))\n\n\n\n\n\n\n\n\n\n\n\nClick to show code\n# Create side-by-side bar charts showing distribution of practices by IMD quintile\n# for dispensing vs non-dispensing practices\n\n# Filter 2023 data and create counts by dispensing status and IMD quintile\ndispensing_counts &lt;- payments %&gt;%\n  filter(Year == 2023, !is.na(IMD_quintile), Dispensing.Practice %in% c(\"Yes\", \"No\")) %&gt;%\n  count(Dispensing.Practice, IMD_quintile) %&gt;%\n  mutate(\n    Practice_Type = case_when(\n      Dispensing.Practice == \"Yes\" ~ \"Dispensing Practices\",\n      Dispensing.Practice == \"No\" ~ \"Non-dispensing Practices\"\n    ),\n    IMD_quintile = factor(IMD_quintile, levels = 1:5)\n  )\n\n# Create the plot\ndispensing_counts %&gt;%\n  ggplot(aes(x = IMD_quintile, y = n, fill = IMD_quintile)) +\n  geom_bar(stat = \"identity\", alpha = 0.8) +\n  facet_wrap(~Practice_Type, scales = \"free_y\") +\n  scale_fill_manual(\n    values = imd_colors,\n    name = \"IMD Quintile\",\n    labels = c(\"1 (least deprived)\", \"2\", \"3\", \"4\", \"5 (most deprived)\")\n  ) +\n  labs(\n    title = \"Distribution of GP Practices by Deprivation Level\",\n    subtitle = \"Number of dispensing vs non-dispensing practices by IMD quintile (2023)\",\n    x = \"IMD Quintile\",\n    y = \"Number of practices\"\n  ) +\n  heec_theme +\n  theme(\n    legend.position = \"bottom\",\n    strip.text = element_text(size = 12, face = \"bold\"),\n    axis.text.x = element_text(angle = 0),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank()\n  ) +\n  guides(fill = guide_legend(reverse = TRUE, nrow = 1))\n\n\n\n\n\n\n\n\n\n\n\nClick to show code\n# Create scatter plot showing relationship between IMD and payments per registered patient\n# for dispensing vs non-dispensing practices\n\n# Filter and clean the data for scatter plot\nscatter_data &lt;- payments %&gt;%\n  filter(\n    Year == 2023,\n    !is.na(IMD),\n    !is.na(Average.payments.per.registered.patient),\n    Dispensing.Practice %in% c(\"Yes\", \"No\"),\n    Total.NHS.Payments.to.General.Practice &gt; 0,\n    Average.payments.per.registered.patient &lt; 600,\n    Number.of.Registered.Patients..Last.Known.Figure. != 0\n  ) %&gt;%\n  mutate(\n    Practice_Type = case_when(\n      Dispensing.Practice == \"Yes\" ~ \"Dispensing\",\n      Dispensing.Practice == \"No\" ~ \"Non-dispensing\"\n    )\n  ) %&gt;%\n  # Arrange so dispensing practices are plotted on top\n  arrange(Practice_Type == \"Dispensing\")\n\n# Create the scatter plot\nscatter_data %&gt;%\n  ggplot(aes(x = IMD, y = Average.payments.per.registered.patient, color = Practice_Type)) +\n  geom_point(alpha = 0.6, size = 2) +\n  scale_color_manual(\n    values = c(\"Dispensing\" = heec_colors[5], \"Non-dispensing\" = heec_colors[6])\n  ) +\n  labs(\n    title = \"NHS Payments per Registered Patient by Deprivation and Practice Type\",\n    subtitle = \"Scatter plot showing relationship between IMD and average payments (2023)\",\n    x = \"Index of Multiple Deprivation (IMD)\",\n    y = \"Average payments per registered patient (¬£)\"\n  ) +\n  scale_y_continuous(\n    limits = c(0, 600),\n    breaks = seq(0, 600, by = 100),\n    labels = label_comma(prefix = \"¬£\")\n  ) +\n  scale_x_continuous(\n    limits = c(0, 70),\n    breaks = seq(0, 70, by = 10)\n  ) +\n  heec_theme +\n  theme(\n    legend.position = c(0.98, 0.98),\n    legend.justification = c(1, 1),\n    legend.title = element_blank(),\n    legend.background = element_rect(fill = \"white\", color = \"grey90\", size = 0.5),\n    panel.grid.major = element_line(color = \"grey90\"),\n    panel.grid.minor = element_blank()\n  )\n\n\n\n\n\n\n\n\n\n\n\nClick to show code\n# Create scatter plot showing relationship between IMD and payments per weighted patient\n# for dispensing vs non-dispensing practices\n\n# Filter and clean the data for scatter plot (weighted patients)\nscatter_data_weighted &lt;- payments %&gt;%\n  filter(\n    Year == 2023,\n    !is.na(IMD),\n    !is.na(Average.payments.per.weighted.patient),\n    Dispensing.Practice %in% c(\"Yes\", \"No\"),\n    Total.NHS.Payments.to.General.Practice &gt; 0,\n    Average.payments.per.weighted.patient &lt; 600,\n    Number.of.Weighted.Patients..Last.Known.Figure. != 0\n  ) %&gt;%\n  mutate(\n    Practice_Type = case_when(\n      Dispensing.Practice == \"Yes\" ~ \"Dispensing\",\n      Dispensing.Practice == \"No\" ~ \"Non-dispensing\"\n    )\n  ) %&gt;%\n  # Arrange so dispensing practices are plotted on top\n  arrange(Practice_Type == \"Dispensing\")\n\n# Create the scatter plot for weighted patients\nscatter_data_weighted %&gt;%\n  ggplot(aes(x = IMD, y = Average.payments.per.weighted.patient, color = Practice_Type)) +\n  geom_point(alpha = 0.6, size = 2) +\n  scale_color_manual(\n    values = c(\"Dispensing\" = heec_colors[5], \"Non-dispensing\" = heec_colors[6])\n  ) +\n  labs(\n    title = \"NHS Payments per Weighted Patient by Deprivation and Practice Type\",\n    subtitle = \"Scatter plot showing relationship between IMD and average payments (2023)\",\n    x = \"IMD (Higher = More deprived)\",\n    y = \"Payments per weighted patient (¬£)\"\n  ) +\n  scale_y_continuous(\n    limits = c(0, 600),\n    breaks = seq(0, 600, by = 100),\n    labels = label_comma(prefix = \"¬£\")\n  ) +\n  scale_x_continuous(\n    limits = c(0, 70),\n    breaks = seq(0, 70, by = 10)\n  ) +\n  heec_theme +\n  theme(\n    legend.position = c(0.98, 0.98),\n    legend.justification = c(1, 1),\n    legend.title = element_blank(),\n    legend.background = element_rect(fill = \"white\", color = \"grey90\", size = 0.5),\n    panel.grid.major = element_line(color = \"grey90\"),\n    panel.grid.minor = element_blank()\n  )\n\n\n\n\n\n\n\n\n\n\n\nClick to show code\n# Create scatter plot showing relationship between IMD and payments per weighted patient\n# excluding prescribing payments to show the effect of dispensing on inequality\n\n# Calculate payments excluding prescribing\nscatter_data_no_prescribing &lt;- payments %&gt;%\n  filter(\n    Year == 2023,\n    !is.na(IMD),\n    Dispensing.Practice %in% c(\"Yes\", \"No\"),\n    Total.NHS.Payments.to.General.Practice &gt; 0,\n    Number.of.Weighted.Patients..Last.Known.Figure. != 0\n  ) %&gt;%\n  mutate(\n    # Calculate total prescribing payments\n    Total.Prescribing = rowSums(select(\n      .,\n      Prescribing.Fee.Payments,\n      Dispensing.Fee.Payments,\n      Reimbursement.of.Drugs\n    ), na.rm = TRUE),\n\n    # Calculate payments minus prescribing\n    Total.NHS.Payments.minus.Prescribing = Total.NHS.Payments.to.General.Practice - Total.Prescribing,\n\n    # Calculate average payments per weighted patient excluding prescribing\n    Average.payments.minus.prescribing.per.weighted.patient =\n      Total.NHS.Payments.minus.Prescribing / Number.of.Weighted.Patients..Last.Known.Figure.,\n    Practice_Type = case_when(\n      Dispensing.Practice == \"Yes\" ~ \"Dispensing\",\n      Dispensing.Practice == \"No\" ~ \"Non-dispensing\"\n    )\n  ) %&gt;%\n  filter(\n    !is.na(Average.payments.minus.prescribing.per.weighted.patient),\n    Average.payments.minus.prescribing.per.weighted.patient &lt; 600\n  ) %&gt;%\n  # Arrange so dispensing practices are plotted on top\n  arrange(Practice_Type == \"Dispensing\")\n\n# Create the scatter plot excluding prescribing payments\nscatter_data_no_prescribing %&gt;%\n  ggplot(aes(x = IMD, y = Average.payments.minus.prescribing.per.weighted.patient, color = Practice_Type)) +\n  geom_point(alpha = 0.6, size = 2) +\n  scale_color_manual(\n    values = c(\"Dispensing\" = heec_colors[5], \"Non-dispensing\" = heec_colors[6])\n  ) +\n  labs(\n    title = \"NHS Payments per Weighted Patient (Excluding Prescribing) by Deprivation\",\n    subtitle = \"Scatter plot showing relationship between IMD and payments excluding prescribing (2023)\",\n    x = \"IMD (Higher = More deprived)\",\n    y = \"Payments (excluding prescribing) per weighted patient (¬£)\"\n  ) +\n  scale_y_continuous(\n    limits = c(0, 600),\n    breaks = seq(0, 600, by = 100),\n    labels = label_comma(prefix = \"¬£\")\n  ) +\n  scale_x_continuous(\n    limits = c(0, 70),\n    breaks = seq(0, 70, by = 10)\n  ) +\n  heec_theme +\n  theme(\n    legend.position = c(0.98, 0.98),\n    legend.justification = c(1, 1),\n    legend.title = element_blank(),\n    legend.background = element_rect(fill = \"white\", color = \"grey90\", size = 0.5),\n    panel.grid.major = element_line(color = \"grey90\"),\n    panel.grid.minor = element_blank()\n  )\n\n\n\n\n\n\n\n\n\nClick to show code\n# Create the dispensing comparison chart\npractice_type_earnings %&gt;%\n  ggplot(aes(x = Year, y = Income.before.tax..contractor., color = Practice.type)) +\n  geom_line(size = 1.2) +\n  geom_point(size = 2.5) +\n  scale_color_manual(values = c(\"Dispensing\" = \"#531A5C\", \"Non-dispensing\" = \"#EF7A34\")) +\n  labs(\n    x = \"Year\",\n    y = \"Partner income before tax (¬£)\",\n    title = \"Partner Income: Dispensing vs Non-dispensing Practices\",\n    subtitle = \"Partner income before tax by practice type over time\",\n    color = \"Practice Type\"\n  ) +\n  heec_theme +\n  theme(\n    legend.position = \"bottom\",\n    axis.text.x = element_text(angle = 0)\n  ) +\n  scale_y_continuous(labels = label_comma(prefix = \"¬£\")) +\n  scale_x_continuous(breaks = unique(practice_type_earnings$Year))"
  },
  {
    "objectID": "README.html#general-practice-inequalities-datapacks",
    "href": "README.html#general-practice-inequalities-datapacks",
    "title": "Health Equity Evidence Centre",
    "section": "5. General Practice Inequalities Datapacks",
    "text": "5. General Practice Inequalities Datapacks\nThere are stark inequalities in the supply, demand and need of general practice. ICBs can take action to address these inequalities.\nWe‚Äôve developed datapacks for each ICB England to help them understand their inequalities and take action.\nWithin the datapacks, we calculate the disparity between practices serving the most and least deprived patients for each ICB, across the following categories:\n\nResources (supply): Payments, Workforce\nPopulation (demand): Disease prevalence, Health-related behaviours\nService quality: QOF achievement\nAccess: Patient experience, Appointments\nImpact on secondary care: Emergency admissions, A&E attendances\n\nIf you‚Äôd like a copy of your own ICBs datapack, please email us contact@heec.co.uk\n**datapacks\nNHS Health Inequalities Notebook"
  },
  {
    "objectID": "README.html#how-does-the-age-structure-of-patients-affect-nhs-payments-to-general-practice",
    "href": "README.html#how-does-the-age-structure-of-patients-affect-nhs-payments-to-general-practice",
    "title": "Health Equity Evidence Centre",
    "section": "6. How does the age structure of patients affect NHS payments to General Practice?",
    "text": "6. How does the age structure of patients affect NHS payments to General Practice?\nIn 2023/24, 6,669 practices received ¬£10.2 billion from the NHS. Capitation payments to individual practices are adjusted using the Carr-Hill formula. On average, practices received ¬£164.64 per patient, with higher payments for practices serving older populations due to higher healthcare needs, prescribing costs and the specific needs of rural areas. This analysis explores how NHS payments to general practices are informed by the age structure, deprivation and rurality of registered patients.\n\n\nClick to show code\n# Scatter plot showing relationship between age and deprivation\nage_analysis %&gt;%\n  mutate(\n    Rurality = case_when(\n      Practice.Rurality == \"Rural\" ~ \"Rural\",\n      Practice.Rurality == \"Urban\" ~ \"Urban\",\n      TRUE ~ \"Unknown\"\n    )\n  ) %&gt;%\n  filter(Rurality != \"Unknown\") %&gt;%\n  arrange(Rurality == \"Rural\") %&gt;%\n  ggplot(aes(x = prop65, y = IMD, color = Rurality)) +\n  geom_point(alpha = 0.6, size = 2) +\n  scale_color_manual(\n    values = c(\"Rural\" = heec_colors[6], \"Urban\" = heec_colors[1])\n  ) +\n  labs(\n    title = \"Relationship between Patient Age Structure and Deprivation\",\n    subtitle = \"Proportion of patients 65+ vs Index of Multiple Deprivation by rurality\",\n    x = \"Proportion of patients 65+ (%)\",\n    y = \"Index of Multiple Deprivation (IMD)\",\n    color = \"Practice Location\"\n  ) +\n  scale_x_continuous(\n    limits = c(0, 50),\n    breaks = seq(0, 50, by = 10)\n  ) +\n  scale_y_continuous(\n    limits = c(0, 60),\n    breaks = seq(0, 60, by = 10)\n  ) +\n  heec_theme +\n  theme(\n    legend.position = \"bottom\"\n  )\n\n\n\n\n\n\n\n\n\n\n\nClick to show code\n# Create stacked bar chart showing payment breakdown by IMD quintile\n# Use 2023 payments data for most recent complete picture\npayment_breakdown &lt;- nhs_payments %&gt;%\n  filter(Year == 2023, !is.na(IMD_quintile)) %&gt;%\n  mutate(\n    # Calculate per-patient amounts for each category\n    global_sum_per_patient = Total.Global.Sum / Number.of.Registered.Patients..Last.Known.Figure.,\n    prescribing_per_patient = Total.Prescribing / Number.of.Registered.Patients..Last.Known.Figure.,\n    other_per_patient = (Total.NHS.Payments.to.General.Practice - Total.Global.Sum - Total.Prescribing) / Number.of.Registered.Patients..Last.Known.Figure.\n  ) %&gt;%\n  # Filter out extreme outliers\n  filter(\n    global_sum_per_patient &lt; 200,\n    prescribing_per_patient &lt; 200,\n    other_per_patient &lt; 200,\n    global_sum_per_patient &gt; 0,\n    prescribing_per_patient &gt;= 0,\n    other_per_patient &gt; 0\n  ) %&gt;%\n  group_by(IMD_quintile) %&gt;%\n  summarise(\n    global_sum = mean(global_sum_per_patient, na.rm = TRUE),\n    prescribing = mean(prescribing_per_patient, na.rm = TRUE),\n    other = mean(other_per_patient, na.rm = TRUE),\n    .groups = \"drop\"\n  ) %&gt;%\n  mutate(\n    IMD_quintile = factor(IMD_quintile, levels = 1:5)\n  ) %&gt;%\n  pivot_longer(\n    cols = c(global_sum, prescribing, other),\n    names_to = \"payment_type\",\n    values_to = \"amount_per_patient\"\n  ) %&gt;%\n  mutate(\n    payment_type = factor(\n      payment_type,\n      levels = c(\"global_sum\", \"other\", \"prescribing\"),\n      labels = c(\"Global Sum\", \"Other Payments\", \"Prescribing\")\n    )\n  )\n\n# Create the stacked bar chart\npayment_breakdown %&gt;%\n  ggplot(aes(x = IMD_quintile, y = amount_per_patient, fill = payment_type)) +\n  geom_bar(stat = \"identity\", alpha = 0.8) +\n  scale_fill_manual(\n    values = c(\"Global Sum\" = heec_colors[1], \"Other Payments\" = heec_colors[2], \"Prescribing\" = heec_colors[3]),\n    name = \"Payment Type\"\n  ) +\n  labs(\n    title = \"NHS Payment Breakdown per Patient by Deprivation Level\",\n    subtitle = \"Average payment per registered patient by payment category and IMD quintile (2023)\",\n    x = \"IMD Quintile (1 = least deprived, 5 = most deprived)\",\n    y = \"Payment per patient (¬£)\"\n  ) +\n  heec_theme +\n  theme(\n    legend.position = \"bottom\",\n    axis.text.x = element_text(angle = 0)\n  ) +\n  scale_y_continuous(labels = label_comma(prefix = \"¬£\")) +\n  guides(fill = guide_legend(nrow = 1))"
  },
  {
    "objectID": "README.html#sorry-were-closed-exploring-general-practice-closures",
    "href": "README.html#sorry-were-closed-exploring-general-practice-closures",
    "title": "Health Equity Evidence Centre",
    "section": "7. Sorry we‚Äôre closed: Exploring general practice closures",
    "text": "7. Sorry we‚Äôre closed: Exploring general practice closures\nIn 2019, there were 7,029 General Practice surgeries in England, providing essential healthcare to more than 60 million patients. However, recent data reveals a concerning trend: this number has fallen by over 10%, leaving just 6,256 practices in operation. While many of these closures represented mergers in with other practices, 193 (24%) shut down completely, leaving no direct replacement. This has displaced an estimated 718,000 ‚Äì equivalent to nearly 1 in every 80 patients in England ‚Äì forcing them to seek new healthcare providers.\nAs the number of surgeries dwindled, the strain on existing practices increased. Over the same period, the average GP list size grew from 8,737 to 9,613 patients. The practices that closed were, on average, significantly smaller, with around 4,004 per surgery. At the same time, the structure of NHS workforce has shifted dramatically, with the number of salaried GPs surpassing the number of GP partners for the first time in NHS history. This shift signals a move away from traditional, independently managed practices toward a system increasingly dominated by large, consolidate healthcare providers."
  },
  {
    "objectID": "README.html#getting-started",
    "href": "README.html#getting-started",
    "title": "Health Equity Evidence Centre",
    "section": "Getting Started",
    "text": "Getting Started\nTo work with this project:\n\nEnsure you have R and Quarto installed\nRun analysis scripts with: Rscript &lt;script_name&gt;.R\nRender Quarto documents with: quarto render &lt;document_name&gt;.qmd\nLaunch Shiny apps with: R -e \"shiny::runApp('&lt;app_directory&gt;/app.R')\"\n\nFor more information, see the CLAUDE.md file for detailed project guidelines and commands."
  }
]